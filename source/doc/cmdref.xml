<refentry id="cmdref-addtype">
  <refmeta>
    <refentrytitle>AddType</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>AddType</command></refname>
    <refpurpose>associates file names or extensions with mime types</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>AddType</command>
    &string-regex;
    &case-nocase;
    <arg choice="req">mime type</arg>
    <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>AddType</command> associates file names and/or extensions
  with mime types, for protocols that
  <emphasis>don't automatically include</emphasis> mime types,
  such as &scheme-file; and &scheme-ftp;.
  </para>
  <note>
    <para>
     The protocols &scheme-http; and &scheme-https;
     automatically include mime types in the response headers, so there is
     usually no need to use <command>AddType</command> if you index only
     &http; and &https; servers.
     However, in case when a &http; or a &https;
     server returns wrong mime type for some reasons, you can use 
     <command>
       <link linkend="cmdref-useremotecontenttype">UseRemoteContentType no</link>
     </command>
     to have &mnogo; ignore the response
     headers and to use the mime types defines by <command>AddType</command>
     commands instead.
    </para>
  </note>
  <para>The first two optional parameters specify comparison type.
    The default comparison type is <literal>String</literal> and
    <literal>Case</literal> (&ci-wild-pattern;).
  </para>
    <para>If the <parameter>mime type</parameter> parameter contains
  spaces (for example, when character set specification is added),
  it should be put into single or double quotes.
  </para>
  <note>
    <para>
    Russian webmasters often use <filename>*.htm</filename> extension
    for
    <literal>windows-1251</literal> documents and
    <filename>*.html</filename> for <acronym>UNIX</acronym>
    <literal>koi8-r</literal> documents.
    </para>
  </note>
    <para>
    The <parameter>pattern</parameter> parameter can be repeated multiple
    times, to associate a mime type with multiple extensions in a single
    command.
  </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>AddType</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
AddType text/plain                      *.txt  *.pl *.js *.h *.c *.pm *.e
AddType text/html                       *.html *.htm
AddType text/rtf                        *.rtf
AddType application/pdf                 *.pdf
AddType "text/html; charset=koi8-r"       *.html
AddType "text/html; charset=windows-1251" *.htm
AddType Regex application/rar  \.r[0-9][0-9]$
AddType application/unknown *.*
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-addencoding"/>,
      <xref linkend="cmdref-defaultcontenttype"/>,
      <xref linkend="cmdref-mime"/>,
      <xref linkend="cmdref-useremotecontenttype"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-addencoding">
  <refmeta>
    <refentrytitle>AddEncoding</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>AddEncoding</command></refname>
    <refpurpose>associates file names or extensions with encoding types</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>AddEncoding</command>
    &string-regex;
    &case-nocase;
    <arg choice="req">encoding type</arg>
    <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The <command>AddEncoding</command> command associates
    the given file names or extensions (for the services that don't
    automatically include them, like &scheme-ftp; or &scheme-file;)
    with the specified
    <link linkend="content-enc"><firstterm>content
    encoding</firstterm></link> types.
    </para>
    <para>The first two optional parameters specify comparison type.
    The default comparison type is <literal>String</literal>
    and <literal>Case</literal> (&ci-wild-pattern;).
    </para>
    <para>
    The <parameter>pattern</parameter> parameter can be repeated multiple
    times, to associate a content encoding type with multiple
    extensions in a single command.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>AddEncoding</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
AddEncoding gzip      *.txt.gz
AddEncoding compress  *.txt.Z
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-addtype"/>,
      <xref linkend="cmdref-mime"/>,
      <xref linkend="cmdref-useremotecontenttype"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-affix">
  <refmeta>
    <refentrytitle>Affix</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Affix</command></refname>
    <refpurpose>loads an &app-ispell; <emphasis>affix file</emphasis></refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>Affix</command>
    <arg choice="req">language</arg>
    <arg choice="req">charset</arg>
    <arg choice="req">path</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
     <command>Affix</command> loads an &app-ispell; <emphasis>affix file</emphasis>
    for <link linkend="ispell">Ispell-based stemming fuzzy search</link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>Affix</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
Affix en us-ascii ispell/english.aff
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-alwaysfoundword"/>,
      <xref linkend="cmdref-dehyphenate"/>,
      <xref linkend="cmdref-ispelluseprefixes"/>,
      <xref linkend="cmdref-spell"/>,
      <xref linkend="cmdref-sqlwordforms"/>,
      <xref linkend="cmdref-stopwordfile"/>,
      <xref linkend="cmdref-synonym"/>,
      <xref linkend="cmdref-usenumericoperators"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-alias">
  <refmeta>
    <refentrytitle>Alias</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Alias</command></refname>
    <refpurpose>associates master and mirror sites</refpurpose>
    <refclass>
      &indexer.conf;
    </refclass>
    <refclass>
      &search.htm; 
    </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>Alias</command>
    &prefix-regex;
    &case-nocase;
    <arg choice="req">master</arg>
    <arg choice="req">mirror</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    The first two optional parameters specify comparison
    and susbstitution types. The default type is
    <literal>Prefix</literal> and <literal>Case</literal>
    (case insensitive prefix match).
    </para>
    <refsect2>
      <title>
        <command>Alias</command> in &indexer.conf;
      </title>
      <para><command>Alias</command> can be used to organize search through
      a <emphasis>master</emphasis> site by indexing
      its <emphasis>mirror</emphasis>.
      </para>
      <para>
      It is also useful to index your own site directly from
      the local file system, to avoid invoking &http;
      server into indexing process and thus offload the server.
      </para>
      <note>
      <para>
      Direct indexing from the local file system works mostly
      in case of a static site. If your site has many dynamic
      documents, such as &cgi; scripts or &app-php; programs,
      indexing from the file system may not work as expected.
      </para>
      </note>
      <para>
      If an <command>Alias</command> command is specified
      for some site only in &indexer.conf;,
      &url; substitution is done by &indexer; just
      <emphasis>before</emphasis>
      downloading a document, while &search.cgi;
      will display document addresses in the
      <emphasis>master</emphasis> site &url;
      notation in search results.
      </para>
    </refsect2>
    <refsect2>
      <title><command>Alias</command> in &search.htm;</title>
      <para>
      If an <command>Alias</command> command is specified
      only in &search.htm;, &url; substitution is done by
      &search.cgi; when displaying search results,
      so the user will see addresses
      in the <emphasis>mirror</emphasis>
      site &url; notation, while &indexer;
      will download the documents from
      the <emphasis>master</emphasis> site at indexing time.
      </para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Alias</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Alias http://www.mysql.com/ http://mysql.udm.net/
Alias http://www.site.com/  file:///usr/local/apache/htdocs/
Alias regex (http://www\.)(.*)(\.yourname\.com/)(.*)  file:///home/$2/htdocs/$4
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-aliasprog"/>,
      <xref linkend="cmdref-realm"/>,
      <xref linkend="cmdref-reversealias"/>,
      <xref linkend="aliases"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-aliasprog">
  <refmeta>
    <refentrytitle>AliasProg</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>AliasProg</command></refname>
    <refpurpose>calls an external &url; rewrite program</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>AliasProg</command>
      <arg choice="req">command line</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>AliasProg</command> specifies an external program
    that takes an &url; and returns an appropriate
    alias to &stdout;. Use the <varname>$1</varname>
    variable to pass &url; value to the program.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>AliasProg</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
AliasProg "echo $1 | /usr/local/mysql/bin/replace http://localhost/ file:///home/httpd/"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-alias"/>,
      <xref linkend="cmdref-reversealias"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-allow">
  <refmeta>
    <refentrytitle>Allow</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Allow</command></refname>
      <refpurpose>
        allows to index the documents
        with the given &url; pattern
      </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Allow</command>
      &match-nomatch;
      &case-nocase;
      &string-regex;
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>Use this command to allow indexing of the documents
    with &url; matching the given pattern.
    </para>
    <para>
    The first three optional parameters describe comparison style.
    The default values are
      <literal>Match</literal>,
      <literal>Case</literal>, <literal>String</literal>
      (&ci-wild-pattern;).
    </para>
    <para>Use <literal>Case</literal> or <literal>NoCase</literal>
      values to choose between <emphasis>case insensitive</emphasis>
      or <emphasis>case sensitive</emphasis>
      comparison styles respectively.
    </para>
    <para>Use <literal>Regex</literal> to choose
      <emphasis>regular expression</emphasis> comparison.
    </para>
    <para>Use <literal>String</literal> to choose
    string with wildcards comparison.
    </para>
    <note>
    <para>
    The characters <literal>?</literal> and <literal>*</literal>
    have special meanings in the <literal>String</literal> match type.
    Use the <literal>Regex</literal> comparison style to describe
    &url; patterns containing these characters.
    </para>
    </note>
    <para><literal>String</literal> match is faster than
    <literal>Regex</literal>. Use <literal>String</literal>
    when it is possible.
    </para>
    <para>
    You can use multiple arguments in the
    same <command>Allow</command> command.
    </para>
    <para>Note that &mnogo;
    automatically adds an <programlisting>Allow regex .*</programlisting>
    command after reading the configuration file. It means
    it allows everything that is not disallowed.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Allow</command> &scope-global-multiple;.
    </para>
    <note>
    <para>
      You can use this command in any part of
      &indexer.conf;. However,
      keep in mind that all
      <command><xref linkend="cmdref-allow"/></command>,
      <command><xref linkend="cmdref-disallow"/></command>,
      <command><xref linkend="cmdref-checkonly"/></command>,
      <command><xref linkend="cmdref-skip"/></command> commands
      are checked in order of their appearance in
      &indexer.conf;. So the mutual order
      of these commands is important.
    </para>
    </note>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Allow everything:
Allow *

# Allow everything but .php .cgi .pl extensions case insensitively using regex:
Allow NoMatch Regex \.php$|\.cgi$|\.pl$

# Allow .HTM extension case sensitively:
Allow Case *.HTM
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-checkonly"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-indexif"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>,
      <xref linkend="cmdref-usesitemap"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-alwaysfoundword">
  <refmeta>
    <refentrytitle>AlwaysFoundWord</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>AlwaysFoundWord</command></refname>
    <refpurpose>defines a word that is treated as found in any document</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>AlwaysFoundWord</command>
      <arg choice="req">word</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>Whenever the given word is searched, it is treated as found
   in any document. This feature can be used for debugging purposes,
   or in any other cases when you need to return all documents
   that present in the search database.
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>AlwaysFoundWord</command> &scope-global-single;.</para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
AlwaysFoundWord secret
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-affix"/>,
      <xref linkend="cmdref-dehyphenate"/>,
      <xref linkend="cmdref-ispelluseprefixes"/>,
      <xref linkend="cmdref-spell"/>,
      <xref linkend="cmdref-sqlwordforms"/>,
      <xref linkend="cmdref-stopwordfile"/>,
      <xref linkend="cmdref-synonym"/>,
      <xref linkend="cmdref-usenumericoperators"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-authbasic">
  <refmeta>
    <refentrytitle>AuthBasic</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>AuthBasic</command></refname>
    <refpurpose>defines user name and password
     for basic &http; authorization
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>AuthBasic</command>
      <arg choice="req">user:password</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>This command defines <emphasis>user name</emphasis>
    and <emphasis>password</emphasis> for
    <firstterm>basic &http; authorization</firstterm> to index
    password-protected sites or site directories.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>AuthBasic</command> is to be set before a <xref linkend="cmdref-server"/>
    command and has effect only on the <emphasis>next</emphasis>
    <xref linkend="cmdref-server"/> command.
    If you have two or more &http; servers
    (or server directories) with the same
    <emphasis>user name</emphasis> and <emphasis>password</emphasis>,
    you need to specify a separate <command>AuthBasic</command>
    command before every <xref linkend="cmdref-server"/> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# If you have password-protected directories, but the rest of the server is open, use:

AuthBasic login1:passwd1
Server http://my.server.com/my/secure/directory1/

AuthBasic login2:passwd2
Server http://my.server.com/my/secure/directory2/

Server http://my.server.com/
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-proxy"/>,
      <xref linkend="cmdref-proxyauthbasic"/>,
      <xref linkend="templates-sec"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-browsercharset">
  <refmeta>
    <refentrytitle>BrowserCharset</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>BrowserCharset</command></refname>
    <refpurpose>defines browser character set</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>BrowserCharset</command>
      <arg choice="req">charset</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>This command defines <firstterm>browser character set</firstterm>.
    &search.cgi; output is <link linkend="charset-searchdec">converted</link>
    into this character set.
    </para>
    <para>
    &def-is; <literal>latin1</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>BrowserCharacterSet</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
BrowserCharset UTF-8
      </programlisting>
    </informalexample>
    </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-forceiischarset1251"/>,
      <xref linkend="cmdref-localcharset"/>,
      <xref linkend="cmdref-remotecharset"/>,
      <xref linkend="cmdref-remotefilenamecharset"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-cache">
  <refmeta>
    <refentrytitle>Cache (obsolete)</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Cache (obsolete)</command></refname>
    <refpurpose>defines whether to enable search result cache</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Cache</command><!--performance-->
      &arg-yesno;
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Cache</command> defines whether to enable
    <link linkend="srcache">search result cache</link> to improve performance.
    This command is obsolete and should be used.
    </para>

    <para>
      Starting from the version <literal>3.3.8</literal>, 
      the <command>Cache</command> command was superseded by
      new search result cache implementation which is
      controlled by the <option><link linkend="cmdref-dbaddr-qcache">QCache=yes</link></option>
      parameter to &cmd-dbaddr;. The new implementation supports automatic
      invalidation of the outdated results, as well as the
      "<firstterm>search in found</firstterm> feature"
      (also often referenced as "<firstterm>refine your search</firstterm>").
    </para>

    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Cache</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Cache yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="srcache"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-casefolding">
  <refmeta>
    <refentrytitle>CaseFolding</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CaseFolding</command></refname>
    <refpurpose>chooses an alternative case mapping</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>CaseFolding</command>
    <group choice="req"><arg>default</arg><arg>turkish</arg><arg>turkish2</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>When storing word information to the database,
    &indexer; converts the words to lower case.
    Some languages can have special rules for case mapping.
    </para>
    <para>
      <title><command>CaseFolding default</command></title>
      With <command>CaseFolding</command> set to <literal>default</literal>,
      or when <command>CaseFolding</command> is omitted,
      &mnogo; applies "traditional" lower case mapping rules.
      <literal>U+0049 LATIN CAPITAL LETTER I</literal> is
      mapped to <literal>U+0069 LATIN SMALL LETTER I</literal>,
      while <literal>U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE</literal>
      does not change:
      <programlisting>
I -&gt; i
&#x0130; -&gt; &#x0130;
      </programlisting>
    </para>
    <para>
      <title><command>CaseFolding turkish</command></title>
      With <command>CaseFolding</command> set to <literal>turkish</literal>,
      &mnogo; applies special rules when converting to lower case.
      <literal>U+0049 LATIN CAPITAL LETTER I</literal> is
      mapped to <literal>U+0131 LATIN SMALL LETTER DOTLESS I</literal>,
      and <literal>U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE</literal>
      is mapped to <literal>U+0069 LATIN SMALL LETTER I</literal>:
      <programlisting>
I -&gt; &#x0131;
&#x0130; -&gt; i
      </programlisting>
      which is suitable for <emphasis>Turkish</emphasis> and
      <emphasis>Azerbaijani</emphasis> languages.
    </para>
    <para>
      <title><command>CaseFolding turkish2</command></title>
      With <command>CaseFolding</command> set to <literal>turkish2</literal>,
      the letters <literal>U+0049 LATIN CAPITAL LETTER I</literal>,
      <literal>U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE</literal> and
      <literal>U+0131 LATIN SMALL LETTER DOTLESS I</literal>
      are mapped to <literal>U+0069 LATIN SMALL LETTER I</literal>:
      <programlisting>
I -&gt; i
&#x130; -&gt; i
&#x131; -&gt; i
      </programlisting>
      which is suitable for indexing <emphasis>Turkish</emphasis>
      and <emphasis>English</emphasis> sites in the same database.
    </para>
    <note>
      <para>
      &indexer.conf; and &search.htm; should set
      <command>CaseFolding</command> to the same value.
      </para>
    </note>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CaseFolding</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CaseFolding turkish
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="accentinsensitive"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-category">
  <refmeta>
    <refentrytitle>Category</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Category</command></refname>
    <refpurpose>binds a group of documents to a category</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Category</command>
      <arg choice="req">category-ID</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>&mnogo; allows to distribute documents between
    <firstterm>nested categories</firstterm>.
    </para>
    <para>
    <parameter>category-ID</parameter> is an &id; in hexadecimal
    number notation. It's possible to have up
    to <literal>6</literal> levels with <literal>256</literal>
    members per level. An empty <parameter>category-ID</parameter>
    value means the root of the category tree.
    </para>
    <para>
    Using categories is explained in details in <xref linkend="categories"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Catregory</command> &scope-server-until-next;
    <command>Catregory</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# This command means a category on first level:
Category AA
# This command means a category on 5th level:
Category FFAABBCCDD
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
     <simplelist>
      <member><xref linkend="cmdref-tag"/></member>,
      <member><xref linkend="categories"/></member>,
      <member><xref linkend="general-subsect"/></member>,
      <member><xref linkend="search-params"/></member>.
      </simplelist>
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-checkmp3">
  <refmeta>
    <refentrytitle>CheckMP3</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CheckMP3</command></refname>
      <refpurpose>checks for MP3 meta information</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CheckMP3</command>
      &match-nomatch; &case-nocase; &string-regex;
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The meaning of the first three optional parameters is exactly the same
    as in the <xref linkend="cmdref-allow"/> command.
    </para>
    <para>When processing a document with the &url;
    matching <varname>pattern</varname>, &indexer; downloads only a
    little part of the document and tries to find
    <firstterm>MP3 tags</firstterm> in it.
    On success, &indexer; parses MP3 tags, otherwise it downloads
    the rest of the document and parses it as usual, according
    to the &hdr-content-type;.
    </para>
    <note>
    <para>
    <command>CheckMP3</command> works only with servers
    supporting <acronym>HTTP/1.1</acronym> protocol.
    It uses the "<literal>Range: bytes</literal>" &http; request header
    to download MP3 tags.
    </para>
    </note>
    <para>
    Indexing MP3 files is explained in details in
    <xref linkend="mp3"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CheckMP3</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CheckMP3 *.bin *.mp3
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-checkonly"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
    </refsect1>
</refentry>


<refentry id="cmdref-checkmp3only">
  <refmeta>
    <refentrytitle>CheckMP3Only</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CheckMP3Only</command></refname>
    <refpurpose>checks for MP3 meta information</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CheckMP3Only</command>
      &match-nomatch; &case-nocase; &string-regex;
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The meaning of the first three optional parameters is exactly the same
    as in the <xref linkend="cmdref-allow"/> command.
    </para>
    <para>When processing a document with the &url;
    matching <varname>pattern</varname>, &indexer;
    (similar to <xref linkend="cmdref-checkmp3"/>) downloads only
    a little part of the document and tries to find
    <firstterm>MP3 tags</firstterm>.
    On success, &indexer; parses MP3 tags. In case when no MP3 tags are found,
    &indexer; does <emphasis>NOT</emphasis> download the rest of the document
    and word information about this document is not put into the database.
    </para>
    <para>
    Indexing MP3 files is explained in details in <xref linkend="mp3"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CheckMP3Only</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CheckMP3Only *.bin *.mp3
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkonly"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-checkonly">
  <refmeta>
    <refentrytitle>CheckOnly</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CheckOnly</command></refname>
    <refpurpose>checks if a document exists</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CheckOnly</command>
      &match-nomatch; &case-nocase; &string-regex;
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The meaning of the first three optional parameters is exactly the same
    as in the <xref linkend="cmdref-allow"/> command.
    </para>
    <para>It is possible to use multiple pattens in
      the same <command>CheckOnly</command> commands.
    </para>
    <para>When processing documents with &url; 
    matching <varname>pattern</varname>, &indexer; uses
    the <acronym>HTTP HEAD</acronym> method
    (instead of the usual <acronym>HTTP GET</acronym>).
    It means that the document is checked only for existence, while
    the document content is not downloaded.
    </para>
    <para>
    <command>CheckOnly</command> can be useful for
    a &ftp; search engine
    (searching through file names rather than file contents),
    for <filename>*.zip</filename>, <filename>*.exe</filename>,
    <filename>*.arj</filename> and other binary files, as well as
    in case of using &indexer; for
    <link linkend="general-linkval">link validation</link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>CheckOnly</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CheckOnly *.b    *.sh   *.md5
CheckOnly *.arj  *.tar  *.zip  *.tgz  *.gz
CheckOnly *.lha  *.lzh  *.rar  *.zoo  *.tar*.Z
CheckOnly *.gif  *.jpg  *.jpeg *.bmp  *.tiff
CheckOnly *.vdo  *.mpeg *.mpe  *.mpg  *.avi  *.movie
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-collectlinks">
  <refmeta>
    <refentrytitle>CollectLinks</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CollectLinks</command></refname>
    <refpurpose>defines whether to store links between documents, for popularity rank.
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CollectLinks</command><!--performance-->
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>CollectLinks</command> defines whether to store
      links between documents to collect information required 
      for <emphasis>popularity rank</emphasis> calculation.
    </para>
    <para>
    Using popularity rank is described in details in 
    <xref linkend="poprank"/>.
    </para>
    <para>
    &mnogo; versions prior to <literal>3.3.0</literal> implicitly
    collected links between all crawled documents.
    Starting from the version <literal>3.3.0</literal>, the
    default behavior is to skip collecting links,
    for crawling performance purposes.
    As a side effect popularity rank calculation is not possible in the
    default configuration. If popularity rank is important for your installation,
    please specify <command>CollectLinks yes</command> in &indexer.conf;.
    <note>
      <para>
      When <command>CollectLinks</command> is set to <literal>yes</literal>,
      link information is stored into the <varname>links</varname> table
      of the &mnogo; database.
      </para>
    </note>
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CollectLinks</command> &scope-server-until-next;
    <command>CollectLinks</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CollectLinks yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
      <title>See also</title>
      <para>
        <xref linkend="cmdref-poprankfeedback"/>,
        <xref linkend="cmdref-poprankshowcntratio"/>,
        <xref linkend="cmdref-poprankshowcntweight"/>,
        <xref linkend="cmdref-poprankskipsamesite"/>,
        <xref linkend="cmdref-poprankuseshowcnt"/>,
        <xref linkend="cmdref-poprankusetracking"/>,
        <xref linkend="cmdref-serverweight"/>.
      </para>
  </refsect1>
</refentry>


<refentry id="cmdref-complexsynonyms">
  <refmeta>
    <refentrytitle>ComplexSynonyms</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ComplexSynonyms</command></refname>
    <refpurpose>defines whether to use phrase-to-word and phrase-to-phrase synonyms</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ComplexSynonyms</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ComplexSynonyms</command> defines whether to
    use complex synonyms during search time. By default,
    &search.cgi; uses only <emphasis>word-to-word</emphasis>
    and <emphasis>word-to-prase</emphasis> synonym types.
    Setting <command>ComplexSynonyms</command> to <literal>yes</literal>
    also activates using <emphasis>phrase-to-word</emphasis> 
    and <emphasis>phrase-to-prase</emphasis> synonyms.
    </para>
    <para>
    </para>
    <para>&def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ComplexSynonyms yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-synonym"/>,
      <xref linkend="cmdref-spell"/>,
      <xref linkend="synonyms"/>.   
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-crawldelay">
  <refmeta>
  <refentrytitle>CrawlDelay</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CrawlDelay</command></refname>
    <refpurpose>defines the number of seconds to wait between
    requests to the same server
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CrawlDelay</command>
      <arg choice="req">seconds</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
     <command>CrawlDelay</command><!--performance-->
    defines to the number of seconds to wait between successive
    requests to the same server, for polite crawling. 
    </para>
    <para>
     &def-is-0;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CrawlDelay</command> &scope-server-until-next;
    <command>CrawlDelay</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CrawlerDelay 10
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-crawlerthreads"/>,
      <xref linkend="general-parallel"/>,
      <xref linkend="cmdref-urlselectskiplock"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-crawlerthreads">
  <refmeta>
  <refentrytitle>CrawlerThreads</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CrawlerThreads</command></refname>
    <refpurpose>sets the number of &indexer; threads started for crawling</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CrawlerThreads</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>CrawlerThreads</command> defines the number of
    crawling threads to start by default,
    when the <literal>-N</literal> command line option is not given to &indexer;.
    </para>
    <para>
    More threads usually give better crawling speed
    (especially when working with remote sites),
    but consumes more &cpu; time and loads the database higher.
    </para>
    <para>
     &def-is-1;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CrawlerThreads</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CrawlerThreads 10
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="general-parallel"/>,
      <xref linkend="cmdref-urlselectskiplock"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-crosswords">
  <refmeta>
  <refentrytitle>CrossWords</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CrossWords</command></refname>
    <refpurpose>specifies whether to use <firstterm>crosswords</firstterm></refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Crosswords</command><!--performance-->
      &arg-yesno;
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>CrossWords</command> specifies whether to enable 
    link words (<firstterm>crosswords</firstterm>)
    during indexing or search.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CrossWords</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Section crosswords 10
Crosswords yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-section"/>,
      <xref linkend="rel-cwords"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-customlog">
  <refmeta>
  <refentrytitle>CustomLog</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CustomLog</command></refname>
    <refpurpose>
    enables logging to &stdout; using the given format
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CustomLog</command>
      <arg choice="req">fmt</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>CustomLog</command> enables logging
    to &stdout; using the given
    format during crawling. A number of variable references is
    available in the format string. You can use this command to
    log &indexer; activity 
    (by redirecting &stdout; to a file)
    in a convenient format for further
    processing by some program, for statistical purposes etc.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CustomLog</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CustomLog "[${PID}] ${CurrentTime} ${Status} ${URL} ${Content-Type}"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-log2stderr"/>,
      <xref linkend="cmdref-loglevel"/>,
      <xref linkend="cmdref-syslogfacility"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-cvsignore">
  <refmeta>
    <refentrytitle>CVSIgnore</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>CVSIgnore</command></refname>
    <refpurpose>defines whether to index internal <acronym>CVS</acronym> files</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>CVSIgnore</command> &arg-yesno;
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>CVSIgnore</command> tells &indexer; whether to skip internal
    <acronym>CVS</acronym> directories. It is designed mostly
    for automatic self-test purposes and should not
    be used normally. See <filename>/msearch-test</filename>
    directory of the &mnogo; source distribution.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>CVSIgnore</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
CVSIgnore yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-alwaysfoundword"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-loglevel"/>,
      <xref linkend="score-debug"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-datefactor">
  <refmeta>
    <refentrytitle>DateFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DateFactor</command></refname>
    <refpurpose>gives lower score to old documents</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>DateFactor</command>
    <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    The <varname>number</varname> parameter
    is a number in the range <literal>0..255</literal> defining
    the effect of the <varname>Last-Modified</varname> value
    of a document on the document score.
    </para>
    <para>
    &def-is-0;, which means
    <varname>Last-Modified</varname> is not taken into account
    on score calculation.
    </para>
    <para>
    If <command>DateFactor</command> is set to a non-zero value,
    then a more fresh document gets higher score comparing to
    an older document with the same content.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
DateFactor 10
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-dateformat">
  <refmeta>
    <refentrytitle>DateFormat</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DateFormat</command></refname>
    <refpurpose>defines date format</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DateFormat</command>
      <arg choice="req">format</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>DateFormat</command> defines date format
    for the <varname>$(Last-Modified)</varname> variable.
    </para>
    <para>
    The format string can have
    <emphasis>conversion specifications</emphasis>
    similar to those used in the <function>strftime</function> 
    <application>C</application> function. Some of the
    available conversion specifications are as follows:
    <simplelist>
      <member><literal>%M</literal> - minutes</member>
      <member><literal>%H</literal> - hour</member>
      <member><literal>%d</literal> - day</member>
      <member><literal>%m</literal> - month</member>
      <member><literal>%y</literal> - year</member>
    </simplelist>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
DateFormat: "%d %b %Y %X %Z"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-excerptpadding"/>,
      <xref linkend="cmdref-excerptsize"/>,
      <xref linkend="cmdref-excerptstopword"/>,
      <xref linkend="cmdref-hlbeg"/>,
      <xref linkend="cmdref-hlend"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-dbaddr">
  <refmeta>
    <refentrytitle>DBAddr</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DBAddr</command></refname>
    <refpurpose>sets the database connection string</refpurpose>
    <refclass>&indexer.conf; &search.htm; </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DBAddr</command>
      <arg choice="req">type://[user[:password]@]hostname[:port]/dbname/[?DBMode=mode][&amp;param1=value1...]</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The <command>DBAddr</command> command defines the connection
    string for the database &mnogo; will use for indexing and searching,
    using &url;-style notation.
    </para>
    <para>
    <command>DBAddr</command> must be used before any other commands,
    and has global effect on the entire configuration file. Multiple
    <command>DBAddr</command> entries are possible in the case of
    a distributed search engine (see <xref linkend="cluster"/>).
    </para>
    <para>
      <emphasis>Type</emphasis>,
      <emphasis>hostname</emphasis>,
      <emphasis>dbname</emphasis>,
      <emphasis>user</emphasis>,
      <emphasis>password</emphasis> and
      <emphasis>port</emphasis> are the most important
      parts of a <command>DBAddr</command> value.
    </para>
    <para>
      The main part of a <command>DBAddr</command> command can also be
      optionally followed by a number of additional parameters,
      like <emphasis>DBMode</emphasis>.
    </para>
    <para>
      The main part is separated
      from the parameters using the <literal>QUESTION MARK</literal> 
      character (<literal>?</literal>),
      and the parameters are separated from each other using the
      <literal>AMPERSAND SIGN</literal> character (<literal>&amp;</literal>).
    </para>
    <refsect2>
      <title>Notes on <emphasis>type</emphasis></title>
      <para>Currently supported <emphasis>type</emphasis> values are
      <literal>mysql</literal>,
      <literal>pgsql</literal>,
      <literal>mssql</literal>,
      <literal>sybase</literal>,
      <literal>oracle</literal>,
      <literal>ibase</literal>,
      <literal>db2</literal>,
      <literal>mimer</literal>,
      <literal>sqlite</literal>,
      <literal>sqlite3</literal>,
      <literal>cache</literal>.
      </para>
    </refsect2>
    <refsect2>
      <title>Notes on <emphasis>hostname</emphasis></title>
      <para>An empty host name with <application>PostgreSQL</application>,
      for example,
      <programlisting>
pgsql://user:password@/dbname/
      </programlisting>
      means that &mnogo; will communicate with the
      <application>PostgreSQL</application> server
      using a <acronym>UNIX</acronym> socket
      rather than a <acronym>TCP</acronym> port.
      </para>
      <para>
      <option>Hostname</option> is not important when describing
      an <acronym>ODBC</acronym> database
      (on <application>Windows</application>,
       or on <acronym>UNIX</acronym> when &mnogo; is
       compiled with <application>UnixODBC</application>
       or <application>iODBC</application> support).
       Specifying an
       <emphasis><acronym>ODBC</acronym> Data Source Name (<acronym>DSN</acronym>)</emphasis>
       in the <emphasis>dbname</emphasis> part is enough,
       so the <emphasis>hostname</emphasis> part can be
       either omitted or can be set to <literal>localhost</literal>:
       <programlisting>
mysql://root@/myodbc/
mysql://root@localhost/myodbc/
      </programlisting>
      </para>
    </refsect2>
    <refsect2>
      <title>Special characters in <emphasis>user</emphasis> and <emphasis>password</emphasis></title>
      <para>Some special characters, if they appear in the user name or password,
      need to be escaped using <literal>%XX</literal> notation,
      where <literal>XX</literal> is a hexadecimal character code.
      Use <literal>%3A</literal> for "<literal>:</literal>",
      <literal>%3B</literal> for "<literal>;</literal>",
      <literal>%3C</literal> for "<literal>&lt;</literal>", 
      <literal>%3D</literal> for "<literal>=</literal>",
      <literal>%3E</literal> for "<literal>&gt;</literal>",
      <literal>%3F</literal> for "<literal>?</literal>" and
      <literal>%40</literal> for "<literal>@</literal>" characters.
      For example,
      <programlisting>
DBAddr pgsql://user:pwd%3Awith%40special%3Cchars@/search/
      </programlisting>
      corresponds to the local <application>PostgreSQL</application>
      database <literal>search</literal> with the user name
      <literal>user</literal> and password "<literal>pwd:with@special&lt;chars</literal>".
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-dbmode">
      <title>The <emphasis>DBMode</emphasis> parameter</title>
      <para>The <option>DBMode</option> optional parameter can
      be set to one of the three values: <literal>single</literal>,
      <literal>multi</literal> or <literal>blob</literal>.
      &def-is; <literal>blob</literal>.
      See <xref linkend="sql-stor"/> for details.
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-socket">
      <title>The <emphasis>Socket</emphasis> parameter</title>
      <para><application>MySQL</application> and <application>PostgreSQL</application>
      users can specify a path to the <acronym>UNIX</acronym> socket
      when connecting to a server running on the local machine:
      <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?socket=/tmp/mysql.sock
DBAddr pgsql://foo:bar@/mnogosearch/?socket=/tmp/s.PGSQL.5432
      </programlisting>
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-setnames">
      <title>The <option>SetNames</option> parameter</title>
      <para><application>MySQL</application> and
      <application>PostgreSQL</application> users can set
      connection character set by specifying the
      <option>SetNames</option> parameter. It is
      important if the default <application>MySQL</application>
      or <application>PostgreSQL</application> client character set
      settings does not correspond to the <xref linkend="cmdref-localcharset"/>
      setting of &mnogo;.
      <programlisting>
LocalCharset utf8
DBAddr http://root@localhost/test/?setnames=utf8
      </programlisting>
      If a non-empty <literal>SetNames</literal> value is specified,
      <application>MySQL</application> and <application>PostgreSQL</application>
      drivers will send a <emphasis>SET NAMES</emphasis>
      query after connection is established.
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-qcache">
      <title>The <option>QCache</option> parameter</title>
      <para>
       When <option>QCache</option> is set to <literal>yes</literal>,
       &search.cgi; enables <firstterm>search results cache</firstterm>,
       which is used to improve search performance of the subsequent queries
       for the same words, including navigating through the
       search result pages (e.g. watching documents <literal>11-20</literal>,
       <literal>21-30</literal> and so on. Also, search results cache
       enables the <emphasis>search in found</emphasis> feature.
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-ps">
      <title>The <option>ps</option> parameter</title>
      <para>
      <application>MySQL</application> and
      <application>PostgreSQL</application> users can specify
      <option>ps=yes</option> to tell
      &indexer; to use the <emphasis>prepared statement</emphasis>
      <acronym>API</acronym> at crawling and indexing time.
      </para>
      <para>
      Using prepared statements for a series of similar &sql;
      queries is usually somewhat faster than direct execution of the same set of
      non-prepared &sql; statements, however
      prepared statements for <application>MySQL</application> and
      <application>PostgreSQL</application> appeared in
      &mnogo; version <literal>3.3.8</literal> and is not enabled
      by default yet for stability purposes.
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-wf">
      <title>Parameters affecting score
       (<emphasis>wf</emphasis> and <emphasis>nwf</emphasis>)
      </title>
      <para>Starting from the version <literal>3.3.0</literal>
      it is possible to specify the <option>wf=XXXX</option> parameter
      for <command>DBAddr</command> in &search.htm;.
      Starting from the version <literal>3.3.3</literal>,
      <option>nwf=XXXX</option> is also allowed.
      </para>
      <para>
      These parameters are useful if you merge two or more
      databases and want to give more score to the search results coming from a certain
      database.
      </para>
      <para>
      The <command>DBAddr</command> parameters have higher precedence
      over the search query parameters. For example, if <option>wf</option> is
      specified as a <command>DBAddr</command> parameter, then the global
      <command>wf</command> values
      (specified in <varname>QUERY_STRING</varname> or using <xref linkend="cmdref-wf"/>
      in &search.htm;) are not used.
      The format of the <option>wf</option> and <option>nwf</option> <command>DBAddr</command>
      parameters is similar to the format described in <xref linkend="search-changeweight"/>.
      <programlisting>
DBAddr mysql://root@localhost/db1/?wf=FFFF
DBAddr mysql://root@localhost/db2/?wf=1111
DBAddr mysql://root@localhost/db3/?wf=1111
      </programlisting>
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-maxresults">
      <title>The <emphasis>MaxResults</emphasis> parameter</title>
      <para>Starting from the version <literal>3.3.0</literal>,
      the <option>MaxResults=num</option> parameter is available to specify
      the maximum number of search results returned from the database.
      It can be useful if you want to add a limited number of sponsored links in
      the top of the search results:
      <programlisting>
DBAddr mysql://root@localhost/avd/?wf=FFFF=1&amp;MaxResults=1
DBAddr mysql://root@localhost/db1/?wf=1111
DBAddr mysql://root@localhost/db2/?wf=1111
      </programlisting>
      </para>
      <para>
      <varname>MaxResults</varname> affects the value of the
      <varname>$(total)</varname> template variable. The number
      of results beyond <varname>MaxResults</varname>  
      is not included into <varname>$(total)</varname>.
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-debugsql">
      <title>The <emphasis>DebugSQL</emphasis> parameter</title>
      <para>Starting from the version <literal>3.3.3</literal>,
      the <option>DebugSQL=yes/no</option> parameter is understood.
      When <option>DebugSQL</option> is set to <literal>yes</literal>, 
      &indexer; and &search.cgi;
      print all &sql; queries sent to the database.
      &mnogo; must be compiled with <literal>--with-debug</literal>, 
      otherwise <option>DebugSQL=yes</option> is ignored.
      <programlisting>
DBAddr mysql://root@localhost/test/?DebugSQL=yes
      </programlisting>
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-trackquery">
      <title>The <emphasis>TrackQuery</emphasis> parameter</title>
      <para>
      Use the <option>trackquery=yes</option> parameter to activate
      search query tracking.
      Please refer to <xref linkend="track"/> for details..
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-blob-related">
      <title>Parameters related to <option>DBMode=blob</option></title>
      <para>Starting from the version <literal>3.2.36</literal>,
      <command>DBAddr</command> supports the <option>Deflate=yes|no</option> parameter.
      With <option>Deflate=yes</option> specified, &indexer; compresses
      data when creating fast search index with <userinput>indexer -Eblob</userinput>,
      which gives a smaller database size and faster search. This option is
      effective for <option>DBMode=blob</option> only. There is no need
      to specify this option in search template, &search.cgi; detects and
      handles compressed data automatically.
      <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?DBMode=blob&amp;Deflate=yes
      </programlisting>
      </para>
      <para>Starting from the version <literal>3.2.36</literal>,
      <command>DBAddr</command> supports <option>zint4=yes|no</option> parameter.
      With <option>zint4=yes</option> specified, &indexer; compresses document
      <varname>IDs</varname> using  a special compression method which we
      called <emphasis>zint4</emphasis>.
      This method is very effective for a sorted array of document <varname>IDs</varname>
      and compresses data up to <literal>85%</literal>
      with relative good decompression speed. In conjunction with
      the <option>Deflate=yes</option> parameter, compression ratio
      can be up to <literal>99.8%</literal>. This option is used
      with <option>DBMode=blob</option>, for the <varname>#rec_id</varname>
      array only.
      <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?DBMode=blob&amp;Deflate=yes&amp;zint4=yes
      </programlisting>
      </para>
    </refsect2>
    <refsect2 id="cmdref-dbaddr-mysql-specific">
      <title><application>MySQL</application> specific parameters</title>
      <refsect3 id="cmdref-dbaddr-mysql-specific-mycnfgroup">
        <title><emphasis>MyCnfGroup</emphasis> - Loading <filename>my.cnf</filename> file</title>
        <para>When initializing a connection to <application>MySQL</application>,
        &mnogo; forces loading of the <filename>my.cnf</filename>
        configuration file from the <literal>client</literal>
        option group by default. Use <option>MyCnfGroup=group</option>
        to load options from another group, or <option>MyCnfGroup=no</option>
        to prevent loading of <filename>my.cnf</filename>:
        <programlisting>
# Load options from a non-default option group
DBAddr mysql://foo:bar@localhost/mnogosearch/?MyCnfGroup=mnogosearch

# Prevent loading my.cnf
DBAddr mysql://foo:bar@localhost/mnogosearch/?MyCnfGroup=no
        </programlisting>
        When connecting to <application>MySQL</application>,
        &mnogo; uses <application>MySQL</application>
        <application>C</application> <acronym>API</acronym> call
        to tell the <application>MySQL</application> connection
        handler which option group to load
        (unless <emphasis>MyCnfGroup=no</emphasis> is specified):
        <programlisting>
mysql_options(mysql, MYSQL_READ_DEFAULT_GROUP, MyCnfGroup);
        </programlisting>
        </para>
      </refsect3>
      <refsect3 id="cmdref-dbaddr-mysql-specific-sqllog">
        <title><emphasis>SQLLog</emphasis> - Using general log</title>
        <para><application>MySQL</application> users can specify
        whether to switch <application>MySQL</application> query
        logging on/off using the <option>SQLLog</option> parameter:
        <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?sqllog=0
DBAddr mysql://foo:bar@localhost/mnogosearch/?sqllog=1
        </programlisting>
        If <option>SQLLog</option> parameter is given,
        then &mnogo; sends the <userinput>SET SQL_LOG_OFF=X</userinput>
        query after connection is established.
        Only users with <application>MySQL</application>
        <emphasis>SUPER</emphasis> privilege can use this parameter.
        </para>
      </refsect3>
      <refsect3 id="cmdref-dbaddr-mysql-specific-sqllogbin">
        <title><emphasis>SQLLogBin</emphasis> - Using binary log</title>
        <para><application>MySQL</application> users can specify
        whether to do binary logging
        by setting the <option>SQLLogBin</option> parameter:
        <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?sqllogbin=0
DBAddr mysql://foo:bar@localhost/mnogosearch/?sqllogbin=1
        </programlisting>
        If <option>SQLLogBin</option> parameter is given,
        then &mnogo; sends the <userinput>SET SQL_LOG_BIN=X</userinput>
        after connection is established.
        Only users with <application>MySQL</application>
        <emphasis>SUPER</emphasis> privilege can use this parameter.
        </para>
      </refsect3>
      <refsect3 id="cmdref-dbaddr-mysql-specific-compress">
        <title><emphasis>Compress</emphasis> - Using compression in client-server protocol</title>
        <para>
        <programlisting>
# Enable client-server compression
DBAddr mysql://foo:bar@localhost/mnogosearch/?Compress=yes

# Disable client-server compression
DBAddr mysql://foo:bar@localhost/mnogosearch/?Compress=no
        </programlisting>
        </para>
        <para>
        If <option>Compression=yes</option> is specified then
        &mnogo; uses <application>MySQL</application>
        <application>C</application> <acronym>API</acronym>
        call to activate client-server  compression:
        <programlisting>
mysql_options(mysql, MYSQL_OPT_COMPRESS, 0);
        </programlisting>
        </para>
        <para>
        If <option>Compression=no</option> is specified, or
        <option>Compression</option> is omitted,
        then this call is not done and therefore no compression happens.
        </para>
        <para>
        Compression improves crawling, indexing and search performance
        when connecting to a remote <application>MySQL</application> server.
        It is not recommended to use compression with <literal>localhost</literal>.
        </para>
      </refsect3>

      <refsect3 id="cmdref-dbaddr-mysql-specific-multiinsert">
        <title><emphasis>MultiInsert</emphasis> - using multiple
          <literal>INSERT</literal> syntax</title>
        <para>
        <programlisting>
# Enable multiple INSERT
DBAddr mysql://foo:bar@localhost/mnogosearch/?MultiInsert=yes

# Disable multiple INSERT
DBAddr mysql://foo:bar@localhost/mnogosearch/?MultiInsert=no
        </programlisting>
        </para>
        <para>
        If <option>MultiInsert=yes</option> is specified then
        <command><literal>indexer -Eblob</literal></command>
        uses multiple <literal>INSERT</literal> syntax when
        runnign with a &app-mysql; database, for example:
        </para>
        <para>
        <programlisting>
INSERT INTO t1 VALUES (100,1,'...'),(101,1,'...'),(102,1,'...'),...,(200,1,'...')
        </programlisting>
        </para>
        <para>
        If <option>MultiInsert=no</option> is specified, or
        <option>MultiInsert</option> is omitted,
        then this call is not done and therefore no compression happens.
        </para>
        <para>
        <option>MultiInsert=yes</option> mode improves performance.
        </para>
      </refsect3>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
DBAddr mysql://foo:bar@localhost/mnogosearch/?DBMode=multi
DBAddr mysql://foo:pwd%3Awith%40special%3Cchars@localhost/mnogosearch/
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-defaultcontenttype">
  <refmeta>
  <refentrytitle>DefaultContentType</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DefaultContentType</command></refname>
    <refpurpose>defines default Content-Type</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DefaultContentType</command>
      <arg choice="req">type</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>DefaultContentType</command> is useful when
    the <literal>Content-Type</literal> header is not
    configured using a <xref linkend="cmdref-section"/> command in &indexer.conf;
    and thus is not stored in the database.
    </para>
    <para>
    When generating excerpts from a <emphasis>Cached Copy</emphasis>,
    &search.cgi; tries first to fetch <literal>Content-Type</literal>
    information from the database. If no information is found,
    &search.cgi; tries to detect <literal>Content-Type</literal> automatically
    using some well-know substrings like <programlisting>&lt;HTML</programlisting>
    or  <programlisting>&lt;!DOCTYPE HTML</programlisting> in the beginning of the
    document, unpacked from the <emphasis>Cached Copy</emphasis>.
    </para>
    <para>
    If automatic guesser fails to detect the document type,
    it chooses <literal>text/plain</literal> by default.
    With help of <command>DefaultContentType</command> you can change
    the default type, for example, to <literal>text/html</literal>
    or <literal>text/xml</literal>.
    However, the better idea (if you use <emphasis>Cached Copies</emphasis>) is to
    activate storing <literal>Content-Type</literal>
    using a proper <xref linkend="cmdref-section"/> command in &indexer.conf;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
DefaultContentType text/html
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-addtype"/>,
      <xref linkend="cmdref-mime"/>,
      <xref linkend="cmdref-useremotecontenttype"/>,
      <xref linkend="stored"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-dehyphenate">
  <refmeta>
    <refentrytitle>Dehyphenate</refentrytitle>
  </refmeta>
  <refnamediv>
  <refname><command>Dehyphenate</command></refname>
    <refpurpose>enables searching for dehyphenated forms of compound words</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>Dehyphenate</command>
    <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>When <command>Dehyphenate</command> is set to <literal>yes</literal>,
    searching for a compound word like <userinput>peace-making</userinput>
    will also search for <userinput>peacemaking</userinput>,
    i.e. for the same word with hyphen removed.
    </para>
    <para>
    &def-is-no;.
    </para>
    <para>This command in available starting from the version <literal>3.3.0</literal></para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Dehyphenate yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-affix"/>,
      <xref linkend="cmdref-alwaysfoundword"/>,
      <xref linkend="cmdref-ispelluseprefixes"/>,
      <xref linkend="cmdref-spell"/>,
      <xref linkend="cmdref-sqlwordforms"/>,
      <xref linkend="cmdref-stopwordfile"/>,
      <xref linkend="cmdref-synonym"/>,
      <xref linkend="cmdref-usenumericoperators"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-defaultlang">
  <refmeta>
    <refentrytitle>DefaultLang</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DefaultLang</command></refname>
    <refpurpose>defines default language</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DefaultLang</command>
      <arg choice="req">string</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>DefaultLang</command> defines the default language for a server.
    The default language can later be used by &search.cgi; to 
    limit search results to a specific language.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>DefaultLang</command> affects all
    <command><xref linkend="cmdref-server"/></command>
    and 
    <command><xref linkend="cmdref-realm"/></command> commands
    until the end of the configuration file, or until the next
    <command>DefaultLang</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
DefaultLang en
Server http://english-site1.com/
Server http://english-site2.com/

DefaultLang de
Server http://german-site1.com/
Server http://german-site2.com/
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-guesserusemeta"/>,
      <xref linkend="cmdref-langmapfile"/>,
      <xref linkend="cmdref-langmapupdate"/>,
      <xref linkend="cmdref-loadchineselist"/>,
      <xref linkend="cmdref-loadthailist"/>,
      <xref linkend="cmdref-varylang"/>,
      <xref linkend="vary"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-detectclones">
  <refmeta>
    <refentrytitle>DetectClones</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DetectClones</command></refname>
    <refpurpose>enables or disables clone detection</refpurpose>
    <refclass>&indexer.conf; &search.htm; </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DetectClones</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>DetectClones</command> enables or disables
    <emphasis>clone detection and eliminating</emphasis>.
    If enabled, &indexer; detects the same documents under different location,
    such as mirrors, and indexes only one document from the group of
    similar documents.
    </para>
    <para>
    <command>DetectClones yes</command> reduces disk space used by the &mnogo; database,
    however makes crawling performance worse.
    </para>
    <para>
    The default value in the versions prior to <literal>3.3.0</literal> was <literal>yes</literal>.
    Starting from the version <literal>3.3.0</literal>, the default value is <literal>no</literal>,
    for crawling performance purposes.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
DetectClones yes
    </programlisting>
    </informalexample>
  </refsect1>
</refentry>


<refentry id="cmdref-disallow">
  <refmeta>
    <refentrytitle>Disallow</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Disallow</command></refname>
    <refpurpose>disallows indexing defined URLs</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Disallow</command>
      <group><arg>Match</arg><arg>NoMatch</arg></group>
      <group><arg>Case</arg><arg>NoCase</arg></group>
      <group><arg>String</arg><arg>Regexp</arg></group>
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The <command>Disallow</command> command disallows adding
    documents with &url; matching the given pattern
    to the database.
    </para>
    <para>The meaning of the first three optional parameters is exactly the same
    as in <xref linkend="cmdref-allow" /> command.
    </para>
    <para>
    You can use multiple patterns in the same <command>Disallow</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>This command takes global effect for configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# Disallow URLs not in udm.net domains using "String" match:
Disallow NoMatch *.udm.net/*
# Disallow any except known extensions and directory index using "regex" match:
Disallow NoMatch Regex \/$|\.htm$|\.html$|\.shtml$|\.phtml$|\.php$|\.txt$
# Exclude cgi-bin and non-parsed-headers using "string" match:
Disallow */cgi-bin/* *.cgi */nph-*
# Exclude anything with '?' sign in URL. Note that '?' sign has a
# special meaning in "string" match, so we have to use "regex" match here:
Disallow Regex  \?
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-checkonly"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-docmemcachesize">
  <refmeta>
    <refentrytitle>DocMemCacheSize</refentrytitle>
  </refmeta>
  <refnamediv>
  <refname><command>DocMemCacheSize</command></refname>
    <refpurpose>this command is obsolete</refpurpose>
  </refnamediv>
</refentry>



<refentry id="cmdref-docsizeweight">
  <refmeta>
  <refentrytitle>DocSizeWeight</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DocSizeWeight</command></refname>
    <refpurpose>changes document size impact on the document score</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DocSizeWeight</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    Use with a number in the range <literal>0..255</literal>
    to give lower score to a longer document and higher score
    to a shorter document if both documents contain the same
    number of found words.
    </para>
    <para>
    &def-is; <literal>255</literal>,
    which means maximum effect of document size.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
DocSizeWeight 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-mincoordfactor"/>,
      <xref linkend="cmdref-numdistinctwordfactor"/>,
      <xref linkend="cmdref-numwordfactor"/>,
      <xref linkend="cmdref-worddensityfactor"/>,
      <xref linkend="cmdref-wordformfactor"/>,
      <xref linkend="score-commands"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-doctimeout">
  <refmeta>
    <refentrytitle>DocTimeOut</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>DocTimeOut</command></refname>
    <refpurpose>defines maximum amount of time spent to download a document</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>DocTimeOut</command>
      <arg choice="req">time</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>DocTimeOut</command> defines maximum amount of time
    &indexer; spends to download a document.
    </para>
    <para>
      The <parameter>time</parameter> argument uses the same format
      with the <xref linkend="cmdref-period"/> command.
    </para>
    <para>&def-is; <literal>90</literal> seconds.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>DocTimeOut</command> can be set multiple times
    and affects all <xref linkend="cmdref-server"/> and
    <xref linkend="cmdref-realm"/> commands until the end
    of the configuration file, or until
    the next <command>DocTimeOut</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
DocTimeOut 1m30s
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-holdbadhrefs"/>,
      <xref linkend="cmdref-maxneterrors"/>,
      <xref linkend="cmdref-neterrordelaytime"/>,
      <xref linkend="cmdref-parsertimeout"/>,
      <xref linkend="cmdref-readtimeout"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-excerptsize">
  <refmeta>
  <refentrytitle>ExcerptSize</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ExcerptSize</command></refname>
    <refpurpose>defines maximal excerpt length</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ExcerptSize</command>
      <arg choice="req">length</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>Defines maximal excerpt length.
    </para>
    <para>When building excerpts for presenting a document
    in search results (using either <emphasis>Cached Copy</emphasis> or
    the <emphasis>body</emphasis> section of the document,
    or the <link linkend="cmdref-uselocalcachedcopy">original document</link>),
    &search.cgi; returns a text not longer than <command>ExcerptSize</command>.
    </para>
    <para>
    &def-is; <literal>256</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ExcerptSize 1024
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>,
      <xref linkend="cmdref-excerptpadding"/>,
      <xref linkend="cmdref-excerptstopword"/>,
      <xref linkend="cmdref-hlbeg"/>,
      <xref linkend="cmdref-hlend"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>,
      <xref linkend="cmdref-uselocalcachedcopy"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-excerptstopword">
  <refmeta>
    <refentrytitle>ExcerptStopword</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ExcerptStopword</command></refname>
    <refpurpose>defines whether to highlight stopwords.</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ExcerptStopword</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
     <command>ExcerptStopword</command> defines if
     &search.cgi; should highlight 
     <link linkend="cmdref-stopwordfile">stopwords</link>
     in excerpts.
    </para>
    <para>
    &def-is-yes;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ExcerptStopword no
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>,
      <xref linkend="cmdref-excerptpadding"/>,
      <xref linkend="cmdref-excerptsize"/>,
      <xref linkend="cmdref-hlbeg"/>,
      <xref linkend="cmdref-hlend"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>,
      <xref linkend="cmdref-stopwordfile"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-excerptpadding">
  <refmeta>
    <refentrytitle>ExcerptPadding</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ExcerptPadding</command></refname>
      <refpurpose>defines excerpt context length</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ExcerptPadding</command>
      <arg choice="req">length</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>ExcerptPadding</command> defines context
    length for <emphasis>context chunks</emphasis> and affects
    appearance of the <varname>$&amp;(body)</varname> template variable.
    </para>
    <para>When building excerpts for presenting a document
    in search results (using either <emphasis>Cached Copy</emphasis> or
    the <emphasis>body</emphasis> section of the document,
    or the <link linkend="cmdref-uselocalcachedcopy">original document</link>),
    &search.cgi; concatenates <emphasis>context chunks</emphasis>.
    Every context chunk consists of a search query word padded with
    its original context from the left and the right sides and can be
    up to <literal>ExcerptPadding * 2 + length(word)</literal> characters.
    </para>
    <para>
    &def-is; <literal>40</literal>.
    </para>
    <para>
    The <emphasis>number</emphasis> of context chunks concatenated into a document except
    can be approximately calculated as
    <literal>ExcerptSize / (ExcerptPadding * 2 + length(word))</literal>.
    So a larger <command>ExcerptPadding</command> value makes every 
    context chunk longer but reduces the number of context chunks
    that can fit into <xref linkend="cmdref-excerptsize"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ExcerptPadding 64
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>,
      <xref linkend="cmdref-excerptsize"/>,
      <xref linkend="cmdref-excerptstopword"/>,
      <xref linkend="cmdref-hlbeg"/>,
      <xref linkend="cmdref-hlend"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-flushservertable">
  <refmeta>
    <refentrytitle>FlushServerTable</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>FlushServerTable</command></refname>
    <refpurpose>puts the <varname>server.active</varname> value in sync with &indexer.conf;</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>FlushServerTable</command>
      </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>FlushServerTable</command> sets
    the <varname>server.active</varname> column
    to <literal>inactive</literal> for all records
    before loading &indexer.conf;.
    </para>
    <para>
    This command will be removed in the future &mnogo; versions.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
FlushServerTable
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-realm"/>,
      <xref linkend="cmdref-server"/>,
      <xref linkend="cmdref-servertable"/>,
      <xref linkend="cmdref-subnet"/>,
      <xref linkend="cmdref-url"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-followsymlinks">
  <refmeta>
    <refentrytitle>FollowSymLinks</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>FollowSymLinks</command></refname>
    <refpurpose>defines whether to dereference symlinks</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>FollowSymLinks</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>FollowSymLinks</command> tells &indexer; whether to
    dereference <emphasis>symbolic links</emphasis> when crawling
    the local file system
    (the &scheme-file; &url; scheme).
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>FollowSymLinks</command> affects all
    <xref linkend="cmdref-server"/> and 
    <xref linkend="cmdref-realm"/>  commands
    until the end of the configuration file,
    or until the next <command>FollowSymLinks</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
FollowSymLinks yes
    </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-forceiischarset1251">
  <refmeta>
    <refentrytitle>ForceIISCharset1251</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ForceIISCharset1251</command></refname>
    <refpurpose>assume that <application>Microsoft IIS</application>
      servers return <literal>windows-1251</literal> character set
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ForceIISCharset1251</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ForceIISCharset1251</command> is useful in <emphasis>Cyrillic</emphasis>
    word for the search engine owners who have to deal with a misconfigured
    <application>Microsoft IIS</application> Web server not reporting
    the content character set correctly.
    </para>
    <para>
    When <command>ForceIISCharset1251</command> is set to <literal>yes</literal>,
    &mnogo; assumes that all servers reporting themselves as 
    <application>Microsoft IIS</application> return content using
    the <literal>windows-1251</literal> character set.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>This command has global effect for the entire configuration file
    and should be used only once.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ForceIISCharset1251 yes
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-browsercharset"/>,
      <xref linkend="cmdref-localcharset"/>,
      <xref linkend="cmdref-remotecharset"/>,
      <xref linkend="cmdref-remotefilenamecharset"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-guesserusemeta">
  <refmeta>
    <refentrytitle>GuesserUseMeta</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>GuesserUseMeta</command></refname>
    <refpurpose>defines whether to use meta tags for character set detection</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
   <cmdsynopsis>
     <command>GuesserUseMeta</command>
     <group choice="req"><arg>yes</arg><arg>no</arg></group>
   </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>GuesserUseMeta</command> defines whether to use
     &html; <command>Content-Type</command> meta tags
     and <acronym>XML</acronym> <command>encoding</command> tags
     for character set detection.
    </para>
    <para>
    &def-is-yes;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>GuesserUseMeta</command> has global effect for the entire 
    configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
GuesserUseMeta no
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-defaultlang"/>,
      <xref linkend="cmdref-langmapfile"/>,
      <xref linkend="cmdref-langmapupdate"/>,
      <xref linkend="cmdref-loadchineselist"/>,
      <xref linkend="cmdref-loadthailist"/>,
      <xref linkend="cmdref-varylang"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-groupbysite">
  <refmeta>
    <refentrytitle>GroupBySite</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>GroupBySite</command></refname>
    <refpurpose>enables grouping search results by site</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>GroupBySite</command>
      <group choice="req"><arg>yes</arg><arg>no</arg><arg>rank</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>GroupBySite</command> defines whether to group
    search results by site.
    </para>
    <para>
    If <command>GroupBySite</command> is set to <literal>yes</literal>,
    then &mnogo; presents only a single document (with the highest
    score) from every site and adds
    a "<emphasis>More results from this site (nnn total)</emphasis>" link,
    were <literal>nnn</literal> is the number of documents found on the given site.
    If you click this link, &mnogo; will present all the <emphasis>nnn</emphasis>
    documents found on this site.
    </para>
    <para>
    If <command>GroupBySite</command> is set to <literal>rank</literal>,
    then &mnogo; presents all found documents, without site grouping
    (the same document set which would be returned by
     <command><literal>GroupBySite no</literal></command>),
    but sorted in a special way. Score of every document is additionally 
    divided by the rank of this document in its site. So score for the best
    document on a site is not changed, score of the second best document
    from the same site is divided by <literal>2</literal>, score of the
    third best document from the same site is divided by
    <literal>3</literal>, and so on. This <command>GroupBySite</command>
    mode effectively displays on the highest positions the documents
    which would be returned by <command><literal>GroupBySite
    yes</literal></command> (i.e. the best documents for every site found),
    and then appends the other documents from different sites intermixed.
    This mode prevents displaying of multiple documents
    from the same site successively and thus gives a chance for all
    found sites to be presented on the top result pages.
    </para>
    <para>
    Grouping results by site can also be activated using the <option>GroupBySite</option>
    parameter in the search query string. However, if you specify <command>GroupBySite</command>
    in &search.htm;, the query string parameter is ignored,
    i.e. the command specified in &search.htm; has higher precedence other
    the search query parameter.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
GroupBySite yes
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-maxdocpersite"/>,
      <xref linkend="search-params"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-hlbeg">
  <refmeta>
    <refentrytitle>HlBeg</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HlBeg</command></refname>
    <refpurpose>defines left search results highlighting code</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>HlBeg</command>
      <arg choice="req">string</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    Search query words are highlighted in search results 
    using the given string to the left and the string
    given in the <command><xref linkend="cmdref-hlend"/></command>
    command to the right.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HlBeg "&lt;strong&gt;"
HlEnd "&lt;/strong&gt;"
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>,
      <xref linkend="cmdref-excerptpadding"/>,
      <xref linkend="cmdref-excerptsize"/>,
      <xref linkend="cmdref-excerptstopword"/>,
      <xref linkend="cmdref-hlend"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>,
      <xref linkend="stored"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-hlend">
  <refmeta>
    <refentrytitle>HlEnd</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HlEnd</command></refname>
    <refpurpose>defines right search results highlighting code</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>HlEnd</command>
      <arg choice="req">string</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>Search query words are highlighted in search
    results using the <command><xref linkend="cmdref-hlbeg"/></command>
    value to the left and the <command>HLEnd</command> value
    to the right.
    </para>
    <para>
    The values of <command><xref linkend="cmdref-hlbeg"/></command>
    and <command>HTEnd</command> typically consist of some
    &html; code changing font color or font style.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HlBeg "&lt;strong&gt;"
HlEnd "&lt;/strong&gt;"
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>,
      <xref linkend="cmdref-excerptpadding"/>,
      <xref linkend="cmdref-excerptsize"/>,
      <xref linkend="cmdref-excerptstopword"/>,
      <xref linkend="cmdref-hlbeg"/>,
      <xref linkend="cmdref-locale"/>,
      <xref linkend="cmdref-pagesperscreen"/>,
      <xref linkend="stored"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-holdbadhrefs">
  <refmeta>
    <refentrytitle>HoldBadHrefs</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HoldBadHrefs</command></refname>
    <refpurpose>defines period of time to keep bad documents in the database</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>HoldBadHrefs</command>
      <arg choice="req">time</arg>
      </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>HoldBadHrefs</command> defines period of time to keep
    unavailable documents (with bad status, e.g.
    <literal>404 Not found</literal> or <literal>503 Service unavailable</literal>)
    before deleting them from the database.
    </para>
    <para>
    When &indexer; finds that a remote host is down,
    the documents from this site are not deleted from
    the database immediately and &search.cgi; uses the previous content
    of these documents. However, if the site doesn't respond for
    a long period of time (e.g. a month), it should be fine to
    remove its documents from the database.
    </para>
    <para>
    &def-is-0;, which means never
    delete unavailable documents from the database automatically
    (for better crawling performance).
    </para>
    <note>
      <para>
      You can periodically delete bad documents from the database manually,
      using &indexer; with the <option>-s</option> command line parameter
      (<emphasis>status limit</emphasis>), for example: <userinput>indexer -Cw -s404</userinput>.
      </para>
    </note>
    <para>See <xref linkend="cmdref-period"/> for the time format description.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HoldBadHrefs</command> affects all the 
    following <xref linkend="cmdref-server"/> and
    <xref linkend="cmdref-realm"/> commands until
    the end of the configuration file, or until the next
    <command>HoldBadHrefs</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HoldBadHrefs 30d
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-doctimeout"/>,    
      <xref linkend="cmdref-maxneterrors"/>,
      <xref linkend="cmdref-neterrordelaytime"/>,
      <xref linkend="cmdref-parsertimeout"/>,
      <xref linkend="cmdref-readtimeout"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-hrefonly">
  <refmeta>
    <refentrytitle>HrefOnly</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HrefOnly</command></refname>
    <refpurpose>scans matching documents for links only
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>HrefOnly</command>
      <group><arg>Match</arg><arg>NoMatch</arg></group>
      <group><arg>Case</arg><arg>NoCase</arg></group>
      <group><arg>String</arg><arg>Regexp</arg></group>
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The meaning of the first three optional parameters is exactly the same
    as in the <xref linkend="cmdref-allow"/> command.
    </para>
    <para><command>HrefOnly</command> makes &indexer; scan the documents
    with &url; matching <parameter>pattern</parameter>
    for <emphasis>links only</emphasis>,
    without indexing the content of these document.
    </para>
    <para>
    <command>HrefOnly</command> can be useful when indexing Web forums
    or mail archives. The pages with message lists should usually be
    scanned only for the links to messages, and only messages should be
    indexed.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HrefOnly</command> has global effect for entire configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# When indexing mail list archives for example, the thread
# index pages (like mail.10.html, thread.21.html, etc.) should be scanned
# for links but should not be indexed:
HrefOnly */mail*.html */thread*.html
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-checkonly"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-htdbaddr">
  <refmeta>
    <refentrytitle>HTDBAddr</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HTDBAddr</command></refname>
    <refpurpose>describes a connection string to a remote &sql; data source</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsect1>
    <title>Description</title>
    <para><command>HTDBAddr</command> describes a connection string to a remote
    &sql; data source using &url;-style notation,
    similar to <xref linkend="cmdref-dbaddr"/>.
    </para>
    <para>Using <command>HTDBAddr</command> and the other <acronym>HTDB</acronym>
    related commands is described in details in <xref linkend="htdb"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HTDBAddr</command> affects all following
    <command><xref linkend="cmdref-server"/></command> commands,
    until the end of the configuration file, or until the next
    <command>HTDBAddr</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HTDBAddr mysql://root@localhost/test/
Server htdb:/test/
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbdoc"/>,
      <xref linkend="cmdref-htdblimit"/>,
      <xref linkend="cmdref-htdblist"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-htdbdoc">
  <refmeta>
    <refentrytitle>HTDBDoc</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HTDBDoc</command></refname>
    <refpurpose>describes a query to fetch a document content from an &sql; source</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsect1>
    <title>Description</title>
    <para>
    Using <command>HTDBDoc</command> and the other <acronym>HTDB</acronym>
    related commands is described in details in <xref linkend="htdb"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HTDBDoc</command> affects all following
    <command><xref linkend="cmdref-server"/></command> commands,
    until the end of the configuration file, or until the next
    <command>HTDBDoc</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HTDBList "SELECT id FROM messages"
HTDBDoc "SELECT title, body FROM messages WHERE id='$2'"
Server htdb:/messages/
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbaddr"/>,
      <xref linkend="cmdref-htdblimit"/>,
      <xref linkend="cmdref-htdblist"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-htdblimit">
  <refmeta>
    <refentrytitle>HTDBLimit</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HTDBLimit</command></refname>
    <refpurpose>limits the amount of document IDs fetched in a single <command>HTDBList</command> query</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsect1>
    <title>Description</title>
    <para>
    Using <command>HTDBLimit</command> and the other <acronym>HTDB</acronym>
    related commands is described in details in <xref linkend="htdb"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HTDBLimit</command> affects all following
    <command><xref linkend="cmdref-server"/></command> commands,
    until the end of the configuration file, or until the next
    <command>HTDBLimit</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HTDBLimit 100000
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbaddr"/>,
      <xref linkend="cmdref-htdbdoc"/>,
      <xref linkend="cmdref-htdblist"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-htdblist">
  <refmeta>
    <refentrytitle>HTDBList</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HTDBList</command></refname>
    <refpurpose>describes a query to fetch document list from an &sql;
    data source
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsect1>
    <title>Description</title>
    <para>
    Using <command>HTDBList</command> and the other <acronym>HTDB</acronym>
    related commands is described in details in <xref linkend="htdb"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>HTDBList</command> affects all following
    <command><xref linkend="cmdref-server"/></command> commands,
    until the end of the configuration file, or until the next
    <command>HTDBList</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HTDBList "SELECT id FROM messages"
HTDBDoc "SELECT title, body FROM messages WHERE id='$2'"
Server htdb:/messages/
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbaddr"/>,
      <xref linkend="cmdref-htdbdoc"/>,
      <xref linkend="cmdref-htdblimit"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-httpheader">
  <refmeta>
    <refentrytitle>HTTPHeader</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>HTTPHeader</command></refname>
    <refpurpose>adds a desired header into &http; requests</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>HTTPHeader</command>
      <arg choice="req">header</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>HTTPHeader</command> allows to add a desired 
    header into &http; request sent by &indexer;.
    </para>
    <para>
    The headers <literal>If-Modified-Since</literal>,
    <literal>Accept-Charset</literal> are sent by
    &indexer; automatically and should not be used in
    a <command>HTTPHeader</command> command.
    </para>
    <para>The header <literal>User-Agent: mnoGoSearch/version</literal>
    is also sent by &indexer;, but it can be overwritten.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>HTTPHeader</command> has global effect for the entire configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
HTTPHeader "User-Agent: My_Own_Agent"
HTTPHeader "Accept-Language: ru, en"
HTTPHeader "From: webmaster@mysite.com"
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-resultcontenttype"/>,
      <xref linkend="cmdref-usecookie"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-idffactor">
  <refmeta>
    <refentrytitle>IDFFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>IDFFactor</command></refname>
    <refpurpose>changes the effect of inverse document frequency</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>IDFFactor</command>
    <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    The <varname>number</varname> parameter
    is a number in the range <literal>0..255</literal> defining
    the effect of the <firstterm>inverse word frequency (IDF)</firstterm>,
    which diminishes the weight of words that occur very frequently
    in the document collection (such as <literal>the</literal>, <literal>a</literal>, etc)
    and increases the weight of words that occur rarely.
    </para>
    <para>
    &def-is; 255.
    </para>
    Please have a look into 
    <ulink url="http://en.wikipedia.org/wiki/Tf-idf">TF-IDF page at Wikipedia</ulink>
    to get more information about <acronym>IDF</acronym>.
    <para>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
IDFFactor 40
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-importenv">
  <refmeta>
    <refentrytitle>ImportEnv</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ImportEnv</command></refname>
    <refpurpose>imports an environment variable</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ImportEnv</command>
      <arg choice="req">name</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>ImportEnv</command> creates or replaces the given
    variable making it available for use in other &indexer.conf; or &search.htm;
    commands, or as a &search.htm; template variable.
    </para>
    <para>
    The value is taken from the environment variable with the same name.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ImportEnv HOME
Include $(HOME)/.indexer.conf
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-replacevar"/>,
      <xref linkend="cmdref-include"/>,
      <xref linkend="templates-oper-set"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-include">
  <refmeta>
    <refentrytitle>Include</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Include</command></refname>
    <refpurpose>includes additional configuration file</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Include</command>
      <arg choice="req">filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The <command>Include</command> command includes another
    configuration file in any place of the &indexer.conf;,
    or in the <literal>&lt;!--variables...--&gt;</literal>
    section of &search.htm;
    </para>
    <para>
    If <parameter>filename</parameter> starts with the <literal>/</literal> sign,
    the path is considered as absolute. Otherwise, the path is considered 
    as relative to <filename>/etc</filename> directory of the &mnogo; installation.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Absolute path if filename starts with "/":
Include /usr/local/mnogosearch/etc/inc1.conf

# Relative path otherwise:
Include inc1.conf
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-importenv"/>,
    <xref linkend="cmdref-replacevar"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-index">
  <refmeta>
    <refentrytitle>Index</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Index</command></refname>
    <refpurpose>defines whether the document content should be indexed</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Index</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Index</command> defines whether &indexer;
    should store word information into the database.
    </para>
    <para>
    &def-is-yes;.
    </para>
    <para>
      <command>Index no</command> can be useful for special purposes, like link validation.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>Index</command> can be set multiple times
    and affects following
    <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command> commands
    until the end of configuration file or until the next 
    <command>Index</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Index no
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-indexif"/>,
    <xref linkend="cmdref-noindexif"/>,
    <xref linkend="cmdref-robots"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-indexif">
  <refmeta>
    <refentrytitle>IndexIf</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>IndexIf</command></refname>
    <refpurpose>allows indexing documents whose section matches the given pattern</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>IndexIf</command>
    <group><arg>Match</arg><arg>NoMatch</arg></group>
    <group><arg>NoCase</arg><arg>Case</arg></group>
    <group><arg>String</arg><arg>Regex</arg></group>
    <arg choice="req">Section</arg>
    <arg choice="req" rep="repeat">Pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>IndexIf</command> allows indexing of documents,
    whose section matches the given pattern.
    Should typically be used in combination
    with <command><xref linkend="cmdref-noindexif"/></command>.
    </para>
    <para>The first three optional parameters describe
    the type of comparison. The default values are <literal>Match</literal>,
    <literal>Case</literal>, <literal>String</literal>
    (case insensitive string pattern match with <literal>?</literal>
     and <literal>*</literal> wildcards).
    </para>
    <para>
    The <option>Section</option> parameter specifies which section
    is checked against the pattern. It can also be a concatenation
    of multiple sections, composed with help of 
    <varname>${SECTION}</varname> syntax.
    </para>
    <para>
    It is possible to use multiple patterns in the same 
    <command>IndexIf</command> command. In this case
    the command will be applied as soon as the first
    matching pattern is found.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>IndexIf</command> takes global effect for the entire configuration file
    and can be used multiple times.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Example1: Don't index a document if its Body section contains "porno"
NoIndexIf Body *porno*
IndexIf Body *

# Example2: Index only those documents with Title section containing "reference"
IndexIf Title *reference*
NoIndexIf Title *

# Example3: Allow indexing of text/plain documents only from the given site.
IndexIf "${URL}#${Content-Type}" "http://site/*#text/plain"
NoIndexIf Content-Type text/plain
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-index"/>,
      <xref linkend="cmdref-noindexif"/>,
      <xref linkend="cmdref-robots"/>,
      <xref linkend="cmdref-skip"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-indextime">
  <refmeta>
    <refentrytitle>IndexTime</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>IndexTime</command></refname>
    <refpurpose>
     Defines in the <literal>Last-Modified</literal> &http;
     header should be processed for date detection
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>IndexTime</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>If <command>IndexTime</command> is set to <literal>yes</literal>
    then <varname>last_mod_time</varname> is set to indexing time,
    instead of the value provided by the <literal>Last-Modified</literal>
    &http; header, which can be useful when
    indexing dynamic documents.
    </para>
    <para>
    &def-is-no;, which means use the <literal>Last-Modified</literal>
    header value.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    This command has global effect for the entire configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
IndexTime yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dateformat"/>
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-ispelluseprefixes">
  <refmeta>
    <refentrytitle>IspellUsePrefixes</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>IspellUsePrefixes</command></refname>
    <refpurpose>allows to use <application>Ispell</application> prefixes at search time</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>IspellUsePrefixes</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>IspellUsePrefixes</command> defines if 
    &search.cgi; should use <emphasis>prefix rules</emphasis> to
    generate word forms when doing
    <link linkend="ispell">Ispell-based stemming</link>.
    </para>
    <para>
    By default, &mnogo; does not use <emphasis>prefix</emphasis> rules,
    and uses only <emphasis>suffix</emphasis> rules for word form
    generation. Prefix rules usually change a word meaning inside out:
    <programlisting>
normal -&gt; abnormal
natural -&gt; unnatural
    </programlisting>
    </para>
    <para>
    When <command>IspellUsePrefixes</command> is set to <literal>yes</literal>,
    &search.cgi; starts using <emphasis>prefix</emphasis> rules
    to generate word forms.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-spell"/>,
    <xref linkend="cmdref-sqlwordforms"/>,
    <xref linkend="cmdref-stopwordfile"/>,
    <xref linkend="cmdref-synonym"/>,
    <xref linkend="cmdref-usenumericoperators"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-langmapfile">
  <refmeta>
    <refentrytitle>LangMapFile</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LangMapFile</command></refname>
    <refpurpose>loads language map for character set and language guesser</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LangMapFile</command>
      <arg choice="req">filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LangMapFile</command> loads a language map
    for the <link linkend="charset-guesser">character set and language guesser</link>
    from the given file.
    </para>
    <para>The file name can be either absolute or relative
    to &mnogo; <filename>/etc</filename> directory.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
LangMapFile langmap/en.ascii.lm
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-defaultlang"/>,
    <xref linkend="cmdref-guesserusemeta"/>,
    <xref linkend="cmdref-langmapupdate"/>,
    <xref linkend="cmdref-loadchineselist"/>,
    <xref linkend="cmdref-loadthailist"/>,
    <xref linkend="cmdref-varylang"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-langmapupdate">
  <refmeta>
    <refentrytitle>LangMapUpdate</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LangMapUpdate</command></refname>
    <refpurpose>activates updating of the loaded language maps</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LangMapUpdate</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    When <command>LangMapUpdate</command> is set
    to <literal>yes</literal>, &indexer; collects
    <emphasis>N-gram</emphasis> statistics from the
    crawled documents and updates the loaded maps
    with the collected data. This is useful when you want
    to improve quality of the map files by crawling 
    model documents.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-defaultlang"/>,
    <xref linkend="cmdref-guesserusemeta"/>,
    <xref linkend="cmdref-langmapfile"/>,
    <xref linkend="cmdref-loadchineselist"/>,
    <xref linkend="cmdref-loadthailist"/>,
    <xref linkend="cmdref-varylang"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-limit">
  <refmeta>
  <refentrytitle>Limit</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Limit</command></refname>
    <refpurpose>describes a fast limit</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Limit</command>
      <arg choice="req">name</arg>
      <arg choice="req">sql</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>Limit</command> describes an &sql; query
    returning a list of &url; <varname>IDs</varname> and
    associates the list with the given name. The query is executed during execution
    of <literal>indexer -Eblob</literal>, <literal>indexer -Erewriteurl</literal>
    or <literal>indexer -Erewritelimits</literal>
    and its results are stored in the database in a compact way
    which allows to fetch the limit during search time very efficiently.
    </para>
    <note>
      <para>
      Use the <option>fl</option> &search.cgi; parameter to load a previously created fast limit at search time.
      </para>
    </note>
    <note>
      <para>
      Starting from the version <literal>3.2.39</literal>, it's also possible
      to specify the <option>fl</option> parameter in the
      <command><xref linkend="cmdref-dbaddr"/></command>
      command in &search.htm;,
      to set different limits for the databases listed in the template.
      </para>
    </note>
    <para>
    <emphasis>Fast limits</emphasis> work much faster
    than <emphasis>section limits</emphasis> which are activated
    by using the <option>sl</option> search parameter
    described in <xref linkend="search-params"/>.
    </para>
    <para>
    Unlike <emphasis>section limits</emphasis>, <emphasis>fast limits</emphasis>
    are suitable for huge databases and can use very complex <command>WHERE</command>
    conditions, typically on the <varname>url</varname>
    and <varname>urlinfo</varname> &mnogo; tables, but can also use joins with external tables.
    </para>
    <para>
    <emphasis>Fast limits</emphasis> work only with the databases supporting
    <option>DBMode=blob</option> (see <xref linkend="sql-stor-blob"/>) and
    reuse the <varname>bdict</varname> table in the &mnogo; database,
    however they are available for <option>DBMode=single</option> and
    <option>DBMode=multi</option> as well.
    </para>
    <note>
      <para>
      If you use <option>DBMode=single</option> or <option>DBMode=multi</option>,
      then run <literal>indexer -Erewritelimits</literal>
      to create or update <emphasis>fast limits</emphasis> after indexing.
      </para>
    </note>
    <note>
      <para>
      If you use <option>DBMode=blob</option> then <emphasis>fast limits</emphasis>
      are recreated automatically
      during execution of <literal>indexer -Eblob</literal> or <literal>indexer -Erewriteurl</literal>,
      however you can still use <literal>indexer -Erewritelimits</literal> for quick rewrite of
      <emphasis>fast limits</emphasis> without touching other data.
      </para>
    </note>
    <para>
    Starting from the version <literal>3.2.39</literal>, it is also possible
    to specify the <command>Limit</command> command directly in &search.htm;
    without having to cache the desired limits using <userinput>indexer -Eblob</userinput>.
    It can be useful for the limits whose &sql; queries
    work very efficiently and return a very small number of documents.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Limit mod  "SELECT rec_id FROM url WHERE url LIKE '%/mod/%'"
Limit html "SELECT url_id FROM urlinfo WHERE sname='Content-Type' AND sval='text/html'"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-userscore"/>, 
      <xref linkend="search-params"/>, 
      <xref linkend="sql-stor-blob"/>,
      <xref linkend="cmdref-dbaddr"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loadurlbasicinfo">
  <refmeta>
    <refentrytitle>LoadURLBasicInfo</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LoadURLBasicInfo</command></refname>
    <refpurpose>defines whether to load basic section values to display in search results</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>LoadURLBasicInfo</command>
    <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LoadURLBasicInfo</command> defines whether to load
    <emphasis>basic section</emphasis> values from the table
    <literal>url</literal>, making the following variables
    available in the <literal>&lt;--res--/&gt;</literal>
    section in &search.htm;:
     <simplelist>
     <member><literal>$(status)</literal></member>,
     <member><literal>$(docsize)</literal></member>,
     <member><literal>$(Last-Modified)</literal></member>,
     <member><literal>$(url)</literal></member>,
     <member><literal>$(next_index_time)</literal></member>,
     <member><literal>$(referrer)</literal></member>,
     <member><literal>$(crc32)</literal></member>,
     <member><literal>$(site_id)</literal></member>,
     <member><literal>$(pop_rank)</literal></member>.
     </simplelist>
    </para>
    <para>&def-is-yes;, which means
    the basic section values are available for displaying
    in search results.
    </para>
    <para>
    If you need only the values of <literal>$(ID)</literal> 
    and <literal>$(Score)</literal> variables in search results
    and don't need the other <emphasis>basic section</emphasis> variables listed above,
    you can set <command>LoadURLBasicInfo</command> to
    <literal>no</literal> and thus get better search performance.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
LoadURLBasicInfo no
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-loadurlinfo"/>,
      <xref linkend="cmdref-loadtaginfo"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loadchineselist">
  <refmeta>
    <refentrytitle>LoadChineseList</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LoadChineseList</command></refname>
    <refpurpose>loads a Chinese frequency dictionary</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LoadChineseList</command>
      <arg><arg choice="req">charset</arg> <arg choice="req">dictionaryfilename</arg></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>LoadChineseList</command> 
    loads a Chinese frequency dictionary to split phrases
    written without spaces into separate words.
    </para>
    <para>By default the <literal>gb2312</literal> character set
    and the file <filename>mandarin.freq</filename>  are used.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
LoadChineseList
      </programlisting>
    </informalexample>
    <informalexample>
      <programlisting>
LoadChineseList gb2312 mandarin.freq
      </programlisting>
    </informalexample>
    <informalexample>
      <programlisting>
LoadChineseList big5 TraditionalChinese.freq
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-defaultlang"/>,
      <xref linkend="cmdref-guesserusemeta"/>,
      <xref linkend="cmdref-langmapfile"/>,
      <xref linkend="cmdref-langmapupdate"/>,
      <xref linkend="cmdref-loadthailist"/>,
      <xref linkend="cmdref-varylang"/>,
      <xref linkend="zh-segment"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loadtaginfo">
  <refmeta>
    <refentrytitle>LoadTagInfo</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LoadTagInfo</command></refname>
    <refpurpose>loads tag values to display in search results</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>LoadTagInfo</command>
    <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LoadTagInfo</command> loads tag values from the
    <varname>server</varname> table, so
    they can be displayed in search results using the <varname>$(tag)</varname>
    variable reference.
    </para>
    <para>&def-is-no;, for performance
    purposes.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
LoadTagInfo yes
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-loadurlbasicinfo"/>,
      <xref linkend="cmdref-loadurlinfo"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loadthailist">
  <refmeta>
    <refentrytitle>LoadThaiList</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LoadThaiList</command></refname>
    <refpurpose>loads a Thai word frequency dictionary</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LoadThaiList</command>
      <arg><arg choice="req">charset</arg> <arg choice="req">dictionaryfilename</arg></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LoadThaiList</command> loads a Thai frequency dictionary to break
    phrases written without spaces into separate words.
    </para>
    <para>By default the <literal>tis-620</literal> character set
    and the file <filename>thai.freq</filename> are used.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
LoadThaiList
      </programlisting>
    </informalexample>
    <informalexample>
      <programlisting>
LoadThaiList tis-620 thai.freq
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-defaultlang"/>,
      <xref linkend="cmdref-guesserusemeta"/>,
      <xref linkend="cmdref-langmapfile"/>,
      <xref linkend="cmdref-langmapupdate"/>,
      <xref linkend="cmdref-loadchineselist"/>,
      <xref linkend="cmdref-varylang"/>,
      <xref linkend="th-segment"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loadurlinfo">
  <refmeta>
    <refentrytitle>LoadURLInfo</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LoadURLInfo</command></refname>
    <refpurpose>loads extended section values to display in search results</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>LoadURLInfo</command>
    <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LoadURLInfo</command> loads section values
    from the <varname>urlinfo</varname> table,
    so they can be displayed in search results using variable
    references, e.g. <varname>$(title)</varname> or <varname>$(Content-Type)</varname>.
    </para>
    <para>&def-is-yes;, which means
    section values are available for displaying in search results.
    </para>
    <para>
    If you need only values of <varname>$(URL)</varname> in search results
    and don't need extended sections, like <varname>$(title)</varname> or
    <varname>$(Content-Type)</varname>,
     you can set <command>LoadURLInfo</command> to <literal>no</literal>
    to get better performance.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
LoadURLInfo no
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-loadurlbasicinfo"/>,
      <xref linkend="cmdref-loadtaginfo"/>,
      <xref linkend="cmdref-usercachequery"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-localcharset">
  <refmeta>
    <refentrytitle>LocalCharset</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LocalCharset</command></refname>
    <refpurpose>defines local character set</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LocalCharset</command>
      <arg choice="req">charset</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>LocalCharset</command> defines the character set which is used to store data in the database.
    </para>
    <para>Documents written in all other character sets are
    converted into the given character set.
    </para>
    <note>
      <para>
      &indexer.conf; and &search.htm; should set
      <command>LocalCharset</command> to the same value.
      </para>
    </note>
    <para>&def-is; <literal>latin1</literal> (<literal>ISO-8859-1</literal>).
    </para>
    <para>See <xref linkend="charset"/> for the list of all available character sets,
    as well as for description how &mnogo; handles character sets and performs conversion
    at various steps of information processing.
    </para>
  </refsect1>
  <refsect1> 
    <title>Scope</title>
    <para><command>LocalCharset</command> has global effect for the entire configuration file
    and should be used only one time.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
LocalCharset UTF-8
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-browsercharset"/>,
    <xref linkend="cmdref-forceiischarset1251"/>,
    <xref linkend="cmdref-remotecharset"/>,
    <xref linkend="cmdref-remotefilenamecharset"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-locale">
  <refmeta>
  <refentrytitle>Locale</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Locale</command></refname>
    <refpurpose>sets a desired locale</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Locale</command>
      <arg choice="req">locale_code</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    Set locale for month and day names displayed by <varname>$(Last-Modified)</varname>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Locale fr_FR.UTF-8
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-browsercharset"/>,
    <xref linkend="cmdref-dateformat"/>,
    <xref linkend="cmdref-excerptpadding"/>,
    <xref linkend="cmdref-excerptsize"/>,
    <xref linkend="cmdref-excerptstopword"/>,
    <xref linkend="cmdref-hlbeg"/>,
    <xref linkend="cmdref-hlend"/>,
    <xref linkend="cmdref-locale"/>,
    <xref linkend="cmdref-pagesperscreen"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-log2stderr">
  <refmeta>
  <refentrytitle>Log2Stderr</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Log2Stderr</command></refname>
    <refpurpose>Defines whether to print messages to &stderr;</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Log2Stderr</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>Log2Stderr</command>
    defines whether to use &stderr; to print messages.
    </para>
    <para>
    &def-is;
    <literal>yes</literal> for &indexer;
    and
    <literal>no</literal> for &search.cgi;.
    </para>
    <para>
    The <command>Log2Stderr</command> value can also be changed
    using the <option>-v</option>  option in
    &indexer; command line.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Log2Stderr yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-customlog"/>,
      <xref linkend="cmdref-loglevel"/>,
      <xref linkend="cmdref-syslogfacility"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-loglevel">
  <refmeta>
  <refentrytitle>LogLevel</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>LogLevel</command></refname>
    <refpurpose>sets verbosity level</refpurpose>
    <refclass>
      &indexer.conf;
      &search.htm;
    </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>LogLevel</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>LogLevel</command>
    sets verbosity level for logging to <application>syslog</application>
    and/or &stderr;.
    </para>
    <para>
    <parameter>number</parameter> can vary between
    <literal>0</literal> (<literal>silent</literal>) and
    <literal>6</literal> (<literal>full logging</literal>).
    &def-is-0; for &search.cgi;
    and <literal>3</literal> for &indexer;.
    </para>
    <para>
    Verbosity level for &indexer; can be changed
    using the <option>-v</option> command line option.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
LogLevel 6
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-customlog"/>,
      <xref linkend="cmdref-log2stderr"/>,
      <xref linkend="cmdref-syslogfacility"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-maxdocsize">
  <refmeta>
    <refentrytitle>MaxDocSize</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MaxDocSize</command></refname>
    <refpurpose>defines maximal document size</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MaxDocSize</command>
      <arg choice="req">bytes</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>&mnogo; does not download more than
      <command>MaxDocSize</command> bytes from
      a document.
    </para>
    <para>The default value <literal>1048576</literal> (<literal>1 Mb</literal>).
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>MaxDocSize</command> has global effect for the entire configuration file.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MaxDocSize 10000000
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxwordlength"/>,
    <xref linkend="cmdref-minwordlength"/>,
    <xref linkend="cmdref-section"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-maxdocpersite">
  <refmeta>
    <refentrytitle>MaxDocPerSite</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MaxDocPerSite</command></refname>
    <refpurpose>defines maximal document number to pick up from every site</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MaxDocPerSite</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>&def-is-0;, 
    which means <emphasis>no limits</emphasis>.
    </para>
    <para>For crawling performance reasons, the actual number of
    documents per site may vary between
    <literal>number</literal> and <literal>2*number</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>MaxDocPerSite</command> has effect on all following
    <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command>
    commands until the end of the configuration file, or
    until the next <command>MaxDocPerSite</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
#
# Index 10 documents per site from .com domain,
# 20 documents per site from .de domain,
# and www.mnogosearch.org without limits.
#
MaxDocPerSite 10
Realm *.com/
MaxDocPerSite 20
Realm *.de/
MaxDocPerSize 0
Server http://www.mnogosearch.org/
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxhops"/>,
    <xref linkend="cmdref-starthops"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-maxhops">
  <refmeta>
    <refentrytitle>MaxHops</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MaxHops</command></refname>
    <refpurpose>defines maximal way in "mouse clicks"</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MaxHops</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>MaxHops</command> defines maximum way
    in "mouse clicks" from the start &url;.
    </para>
    <para>&def-is; <literal>256</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>Can be set multiple times and
    affect all following
    <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command> commands
    until the end of the configuration file, or until the next
    <command>MaxHops</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MaxHops 10
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-starthops"/>,
    <xref linkend="cmdref-maxdocpersite"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-maxneterrors">
  <refmeta>
    <refentrytitle>MaxNetErrors</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MaxNetErrors</command></refname>
    <refpurpose>defines maximal network errors</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MaxNetErrors</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>MaxNetErrors</command> defines maximum network errors for a server.
    </para>
    <para>If there are too many network errors happening with some server
    (like server is down, host unreachable, etc), &indexer; will try to do
    not more than <parameter>number</parameter> attempts to connect to this server
    per session.
    </para>
    <para>&def-is; <literal>16</literal>. Use <literal>0</literal>
    for unlimited error number.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>MaxNetErrors</command> affects all following
     <command><xref linkend="cmdref-server"/></command> and
     <command><xref linkend="cmdref-realm"/></command> commands
     until the end of the configuration file or until the next
     <command>MaxNetErrors</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MaxNetErrors 16
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-doctimeout"/>,
    <xref linkend="cmdref-holdbadhrefs"/>,
    <xref linkend="cmdref-neterrordelaytime"/>,
    <xref linkend="cmdref-parsertimeout"/>,
    <xref linkend="cmdref-readtimeout"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-maxwordlength">
  <refmeta>
    <refentrytitle>MaxWordLength</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MaxWordLength</command></refname>
    <refpurpose>defines maximal word length</refpurpose>
  <refclass>&indexer.conf;</refclass>
  <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MaxWordLength</command>
      <arg choice="req">length</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>MaxWordLength</command> defines maximum word length.
    </para>
    <para>
     &def-is; <literal>32</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MaxWordLength 64
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxdocsize"/>,
    <xref linkend="cmdref-minwordlength"/>,
    <xref linkend="cmdref-section"/>.
  </para>
  </refsect1>
</refentry>


<refentry id="cmdref-mime">
  <refmeta>
    <refentrytitle>Mime</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Mime</command></refname>
    <refpurpose>defines external parser for given mime-type</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Mime</command>
      <arg choice="req">from_mime</arg>
      <arg choice="req">to_mime</arg>
      <arg choice="req">command line</arg>
      <arg choice="opt">source</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Mime</command> is used to enable parsing documents with mime types
    other than <literal>text/plain</literal>,
    <literal>text/html</literal> or <literal>text/xml</literal>, which
    have built-in parsers.
    </para>
    <para>
    Processing of documents with other mime types is possible 
    with help of
    <emphasis><link linkend="parsers">external parsers</link></emphasis> -
    external programs which convert documents of arbitrary types
    to the above types natively supported by &mnogo;.
    </para>
    <para>The <parameter>from_mime</parameter> and
    <parameter>to_mime</parameter> parameters are standard mime types.
    </para>
    <para>
    <parameter>to_mime</parameter> should be one of the natively supported types (listed above)
    and can optionally have the <option>charset=</option> part.
    If the <option>charset=</option> part is omitted,
    the parser output is considered to be in 
    <command><xref linkend="cmdref-localcharset"/></command>.
    </para>
    <para>By default, when executing a parser, &indexer; sends data
    to its &stdin; and reads results from its &stdout;.
    </para>
    <para>Some parsers can not operate on &stdin; and need a file.
    The <parameter>command line</parameter> parameter can have <varname>$1</varname>
    reference which stands for a temporary file name.
    If <varname>$1</varname> is specified, &indexer; creates a temporary
    file, writes the input data to it, and substitutes the temporary
    file in the parser command line instead of the <varname>$1</varname> reference.
    </para>
    <para><parameter>Command line</parameter> can also use variables,
    for example <varname>${URL}</varname> or <varname>${Content-Type}</varname>.
    See the list of all available variables in <userinput>indexer -v6</userinput> output,
    in the lines having the "<literal>Response.</literal>" prefix.
    </para>
    <para>
    The fourth parameter <parameter>source</parameter> is optional.
    It can specify what kind of data is sent to the parser.
    By default, &indexer; sends raw document content.
    With help of the <parameter>source</parameter> parameter you
    can mix document content with other kind of data,
    for example, its &url; or some &http; header,
    using the same notation with the <parameter>command line</parameter> parameter.
    Raw content is available as <varname>${HTTP.Content}</varname>.
    <note>
      <para>
      To make <varname>${HTTP.Content}</varname> available, use <literal>Section HTTP.Content 0 0</literal>
      command.
      </para>
    </note>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Mime application/msword      "text/plain; charset=cp1251"  "catdoc $1"
Mime application/x-troff-man  text/plain                    "deroff"
Mime text/x-postscript        text/plain                    "ps2ascii"
Mime application/pdf          text/plain                    "pdftotext $1 -"
Mime application/vnd.ms-excel text/plain                    "xls2csv $1"
Mime "text/rtf*"              text/html                     "rthc --use-stdout $1 2&gt;/dev/null"

# A parser example with variables in its command line
Mime application/mytype       text/html    "myparser -u ${URL} -t ${Content-Type} $1"

# Mixing content with URL and HTTP headers
Section HTTP.Content 0 0
Mime application/mytype2      text/html    "myparser2"   "${URL} # ${Content-Type} # ${HTTP.Content}"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-addtype"/>,
    <xref linkend="cmdref-defaultcontenttype"/>,
    <xref linkend="cmdref-useremotecontenttype"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-mincoordfactor">
  <refmeta>
  <refentrytitle>MinCoordFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MinCoordFactor</command></refname>
    <refpurpose>gives more score to documents having query words closer to the beginning</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MinCoordFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>MinCoordFactor</command> gives more score to the documents
    having the first found word closer to the beginning
    of the document.
    </para>
    <para>
    Use with a number between <literal>0</literal> and <literal>255</literal>.
    </para>
    <para>
    &def-is-0;, which means <emphasis>no effect</emphasis>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MinCoordFactor 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-worddensityfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-minwordlength">
  <refmeta>
    <refentrytitle>MinWordLength</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MinWordLength</command></refname>
    <refpurpose>defines minimal word length</refpurpose>
    <refclass>
  &indexer.conf;
  &search.htm;
</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MinWordLength</command>
      <arg choice="req">length</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>MinWordLength</command> defines minimal word length.
    </para>
    <para>
    The words which are shorter than <parameter>length</parameter> are considered
    to be <emphasis>stopwords</emphasis> and not put into the database.
    </para>
    <para>
     &def-is-1;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
MinWordLength 4
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxdocsize"/>,
    <xref linkend="cmdref-maxwordlength"/>,
    <xref linkend="cmdref-section"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-mirrorheadersroot">
  <refmeta>
    <refentrytitle>MirrorHeadersRoot</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MirrorHeadersRoot</command></refname>
    <refpurpose>defines root directory for mirrored document headers</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MirrorHeadersRoot</command>
      <arg choice="req">path</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>MirrorHeadersRoot</command> defines
    the root directory where to store headers for the mirrored documents.
    </para>
    <para>
    When <command>MirrorHeadersRoot</command> is set to a non-empty value,
    &indexer; stores all &http; headers or the mirrored
    documents to the local disk.
    </para>
    <para>
    &def-is; <emphasis>empty string</emphasis>, which means
    that the headers are not stored to the disk when mirroring.
    <note>
      <para>
       If you are using mirroring for
       <link linkend="mirror-as-cache"><emphasis>crawler cache</emphasis></link>
       purposes and don't define <command>MirrorHeadersRoot</command>, then
       &indexer; will attempt to detect <literal>Content-Type</literal>
       of the mirrored documents according to <command><xref linkend="cmdref-addtype"/></command>
       settings.
      </para>
    </note>
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-mirrorperiod"/>,
    <xref linkend="cmdref-mirrorroot"/>,
    <xref linkend="mirror"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-mirrorperiod">
  <refmeta>
    <refentrytitle>MirrorPeriod</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MirrorPeriod</command></refname>
    <refpurpose>defines fresh period for mirrored files</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MirrorPeriod</command>
      <arg choice="req">time</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>MirrorPeriod</command> defines the period of time
      when &indexer; is allowed to reuse previously mirrored
      documents as
      <link linkend="mirror-as-cache"><emphasis>crawler cache</emphasis></link>
      instead of real downloading (to reduce Internet traffic).
    </para>
    <note>
      <para>
    Using mirrors as <emphasis>crawler cache</emphasis> can be useful
    when you are doing experiments with &mnogo; to find the best configuration
    that suites your need.
      </para>
    </note>
    <para>The default value of is <literal>-1</literal>,
    which means that the mirrored files are not used
    as <link linkend="mirror-as-cache"><emphasis>crawler cache</emphasis></link>.
    </para>
    <para>
      See the <command><xref linkend="cmdref-period"/></command> command description
      for time format.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Allow to use the mirrored copies throughout one day:
MirrorPeriod 1d
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-mirrorheadersroot"/>,
    <xref linkend="cmdref-mirrorroot"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-mirrorroot">
  <refmeta>
    <refentrytitle>MirrorRoot</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>MirrorRoot</command></refname>
    <refpurpose>defines root directory for mirrored documents</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>MirrorRoot</command>
      <arg choice="req">path</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>MirrorRoot</command> defines the root directory for the mirrored documents.
    </para>
    <para>
     &def-is; <emphasis>empty string</emphasis>, which means mirroring
     is disabled.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-mirrorheadersroot"/>,
    <xref linkend="cmdref-mirrorperiod"/>,
    <xref linkend="mirror"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-neterrordelaytime">
  <refmeta>
    <refentrytitle>NetErrorDelayTime</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NetErrorDelayTime</command></refname>
    <refpurpose>defines document processing delay</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NetErrorDelayTime</command>
      <arg choice="req">time</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>NetErrorDelayTime</command> specifies document processing
     delay time when a network errors occurs. &indexer; downloads
     an erroneous document once again after the given period of time.
    </para>
    <para>
     See the <command><xref linkend="cmdref-period"/></command> command
     description for time format.
    </para>
    <para>
     &def-is; <literal>one day</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
NetErrorDelayTime 1d
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-doctimeout"/>,
    <xref linkend="cmdref-holdbadhrefs"/>,
    <xref linkend="cmdref-maxneterrors"/>,
    <xref linkend="cmdref-parsertimeout"/>,
    <xref linkend="cmdref-readtimeout"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-newsextensions">
  <refmeta>
    <refentrytitle>NewsExtensions</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NewsExtensions</command></refname>
    <refpurpose>enables news extensions</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NewsExtensions</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>Whether to enable news extensions. Default value is no.</para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
NewsExtensions yes
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-noindexif">
  <refmeta>
    <refentrytitle>NoIndexIf</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NoIndexIf</command></refname>
    <refpurpose>disallows indexing documents having a section matching a pattern.
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NoIndexIf</command>
      &match-nomatch; &case-nocase; &string-regex;
      <arg choice="req">SectionName</arg>
      <arg choice="req" rep="repeat">Pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
       <command>NoIndexIf</command> is opposite to <xref linkend="cmdref-indexif"/>.
    </para>
    <para>
       <command>NoIndexIf</command> disallows indexing of documents having the section
       with name <parameter>SectionName</parameter> matching <parameter>Pattern</parameter>.
       Should typically be used in combination with <xref linkend="cmdref-indexif"/>.
    </para>
    <para>
     The first three optional parameters describe comparison type.
     The default values are <literal>Match</literal>, <literal>Case</literal>, <literal>String</literal>
    (&ci-wild-pattern;). 
    </para>
    <para>
     The <parameter>SectionName</parameter> parameter specifies which section
     is checked against <parameter>Pattern</parameter>. It can also be a concatenation
     of multiple sections, composed with help of <varname>${SECTION}</varname> syntax.
    </para>
    <para>
     It is possible to use multiple patterns in the same <command>NoIndexIf</command> command.
     In this case the command will be applied as soon as the first matching pattern is found. 
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>NoIndexIf</command> &scope-global-multiple;.</para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Don't index a document if its Body section contains "porno"
NoIndexIf Body *porno*
IndexIf Body *
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-index"/>,
    <xref linkend="cmdref-indexif"/>,
    <xref linkend="cmdref-robots"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-numsections">
  <refmeta>
  <refentrytitle>NumSections</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NumSections</command></refname>
    <refpurpose>tells the number of sections configured in
    &indexer.conf;
    </refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NumSections</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command><xref linkend="cmdref-numsections"/></command>
    tells &search.cgi; how many sections are configured in &indexer.conf;
    </para>
    <para>
    &def-is; <literal>256</literal>.
    </para>
    <para>
      <command>NumSections</command> value do not affect document ordering
      and changes only the absolute score values for all documents in the search results.
      Smaller <command>NumSections</command> values produce higher score values.
    </para>
    <para>
      It's not recommended to use a value smaller than the real number
      of sections configured in &indexer.conf;,
      to avoid numeric overflow in score calculation.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
NumSections 8
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-wf"/>,
      <xref linkend="cmdref-worddistanceweight"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-numdistinctwordfactor">
  <refmeta>
  <refentrytitle>NumDistinctWordFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NumDistinctWordFactor</command></refname>
    <refpurpose>gives more score to documents having more distinct words</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NumDistinctWordFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    The <parameter>number</parameter> parameter is a number
    between <literal>0</literal> and <literal>255</literal>,
    defining to what extent the number of <emphasis>distinct</emphasis>
    found words in a document affects its final score. 
    </para>
    <para>
    &def-is; <literal>0</literal>.
    </para>
    <para>
    <literal>255</literal> means maximum effect, <literal>0</literal>
    means that the number of distinct words does not affect the final score.
    </para>
    <para>
    <command>NumDistinctWordFactor</command> has effect only when searching
    for <emphasis>any word</emphasis> using the <option>m=any</option> search
    parameter.
    Search query consisting of multiple words will give more score to the
    documents containing <emphasis>all</emphasis> of the search query words
    and less score to the documents having only <emphasis>some</emphasis> of the words.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
NumDistinctWordFactor 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-worddensityfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-numwordfactor">
  <refmeta>
  <refentrytitle>NumWordFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>NumWordFactor</command></refname>
    <refpurpose>gives more score to documents having more found words</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>NumWordFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    The <parameter>number</parameter> parameter is a number
    between <literal>0</literal> and <literal>255</literal>
    defining in what extent the count
    of found words in a document affects its final score. 
    More found words in a document give more score.
    </para>
    <para>
    <literal>255</literal> means maximum effect.
    <literal>0</literal> means that the count of found words does not 
    affect the final score.
    </para>
    <para>
     &def-is; <literal>25</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
NumWordFactor 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>,
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-worddensityfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-pagesperscreen">
  <refmeta>
    <refentrytitle>PagesPerScreen</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PagesPerScreen</command></refname>
    <refpurpose>
      defines the number of search result page links.
    </refpurpose>
    <refclass>&search.cgi;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>PagesPerScreen</command>
    <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>PagesPerScreen</command> defines the number of
    links in search result navigator.
    </para>
    <para>
    The default search result page navigator (usually displayed in the bottom
    of search &html; output) contains a link to the previous result page,
    a link to the next result page, and <command>PagesPerScreen</command>
    links to the other pages in between, with the current page being
    in the middle:
      <programlisting>
&lt;&lt; Prev 1 2 3 4 5 [6] 7 8 9 10 Next &gt;&gt;
      </programlisting>
    </para>
    <para>
   &def-is; <literal>10</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
PagesPerScreen 20
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-excerptpadding"/>,
    <xref linkend="cmdref-excerptsize"/>,
    <xref linkend="cmdref-excerptstopword"/>,
    <xref linkend="cmdref-hlbeg"/>,
    <xref linkend="cmdref-hlend"/>,
    <xref linkend="cmdref-locale"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-parsertimeout">
  <refmeta>
    <refentrytitle>ParserTimeOut</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ParserTimeOut</command></refname>
    <refpurpose>defines maximum allowed parser execution time</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>ParserTimeOut</command>
    <arg choice="req">seconds</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
    <refsect1>
    <title>Description</title>
    <para>
    <command>ParserTimeOut</command> specifies the maximum 
    allowed amount of time spent for an external parser
    execution, to avoid possible &indexer; hang-up.
    </para>
    <para>
    If an external parser call takes longer than the maximum allowed amount
    of time, &indexer; kills the parser process and switches to the
    next document in the queue.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ParserTimeOut 300
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-period">
  <refmeta>
    <refentrytitle>Period</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Period</command></refname>
    <refpurpose>defines reindex period</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Period</command>
      <arg choice="req">time</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>Period</command> defines reindex period.
    </para>
    <para>
    The <parameter>time</parameter> parameter understands this format:
    <programlisting>
    xxxA[yyyB[zzzC]]
    </programlisting>
    where <literal>xxx</literal>, <literal>yyy</literal>, <literal>zzz</literal>
    are numbers (negative numbers are allowed), and <literal>A</literal>, <literal>B</literal>, <literal>C</literal>
    are <emphasis>interval specifier characters</emphasis> as follows:
    <programlisting>
s - second
M - minute
h - hour
d - day
m - month
y - year
    </programlisting>
    </para>
    <note>
    <para>
    The specifier characters are similar to format characters
    used by the <function>strptime</function> and <function>strftime</function>
    <application>C</application> functions.
    </para>
    </note>
    <para>
    If the <parameter>time</parameter> value is put into single or double quotes,
    spaces are allowed between <literal>xxx</literal>, <literal>A</literal> and
    <literal>yyy</literal>, and so on.
    </para>
    <para>
    If you specify only a number without any characters, it is assumed
    that <parameter>time</parameter> is given in <emphasis>seconds</emphasis>.
    </para>
    <para>&def-is; <literal>7d</literal> (one week).</para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>Period</command> can be set multiple times and has effect
    on all following <xref linkend="cmdref-server"/> and <xref linkend="cmdref-realm"/>
    commands until the end of the configuration file, or until the next 
    <command>Period</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# 15s - 15 seconds
# 4h30M - 4 hours and 30 minutes
# 1y6m-15d - 1 year and six month minus 15 days
# 1h-10M+1s - 1 hour minus 10 minutes plus 1 second

Period 7d
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-poprankfeedback">
  <refmeta>
    <refentrytitle>PopRankFeedBack</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankFeedBack</command></refname>
    <refpurpose>uses sites weights when calculating Popularity Rank</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankFeedBack</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>PopRankFeedBack</command> makes &indexer; calculate sites wights
    before Popularity Rank is calculated.
    </para>
    <para>&def-is-no;</para>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
PopRankFeedBack yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-poprankshowcntratio">
  <refmeta>
    <refentrytitle>PopRankShowCntRatio</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankShowCntRatio</command></refname>
    <refpurpose>defines <command>PopRankUseShowCnt</command> threshold</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankShowCntRatio</command>
      <arg choice="req">ratio</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
    <para>&def-is; <literal>25</literal>%.</para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-poprankshowcntweight">
  <refmeta>
    <refentrytitle>PopRankShowCntWeight</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankShowCntWeight</command></refname>
    <refpurpose>defines <command>PopRankUseShowCnt</command> strength</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankShowCntWeight</command>
      <arg choice="req">weight</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>&def-is; <literal>0.01</literal></para>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-poprankskipsamesite">
  <refmeta>
    <refentrytitle>PopRankSkipSameSite</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankSkipSameSite</command></refname>
    <refpurpose>skips links from same site</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankSkipSameSite</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>PopRankSkipSameSite</command> defines whether 
    internal site links should be skipped during Popularity Rank calculation.
    </para>
    <para>&def-is-no;.</para>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
PopRankSkipSameSite yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-poprankuseshowcnt">
  <refmeta>
    <refentrytitle>PopRankUseShowCnt</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankUseShowCnt</command></refname>
    <refpurpose>PopRankUseShowCnt</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankUseShowCnt</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>PopRankUseShowCnt</command> defines whether high scored
    documents <emphasis>seen</emphasis> by users get higher 
    <emphasis>Popularity Rank</emphasis> value.
    </para>
    <para>&def-is-no;.</para>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-poprankusetracking">
  <refmeta>
    <refentrytitle>PopRankUseTracking</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>PopRankUseTracking</command></refname>
    <refpurpose>defines if a site appearing in search results oftener gets higher Popularity Rank weight</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>PopRankUseTracking</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>PopRankUseTracking</command> defines
    whether to use the data collected by the <link linkend="track">query tracking</link>
    module to give higher <emphasis>Popularity Rank</emphasis> to
    to the sites appearing in search results oftener.
    </para>
    <para>&def-is-no;.</para>
    <para>
    Have a look into <xref linkend="poprank"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-serverweight"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-proxy">
  <refmeta>
    <refentrytitle>Proxy</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Proxy</command></refname>
    <refpurpose>defines &http; proxy address</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Proxy</command>
      <arg choice="req">host</arg>
      <arg>:port</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>Proxy</command> defines whether to use a proxy server rather then direct connection.
    </para>
    <para>
    Using proxy is possible with &http;, &https; and &ftp; protocols.
    </para>
    <para>The default port value is <literal>3128</literal>, which is
    similar to the port used by <application>Squid proxy server</application>.
    </para>
    <para>If the <command>Proxy</command> value is empty, or no <command>Proxy</command>
    commands are defined, then direct connection is used.
    </para>
  </refsect1>
  <refsect1> 
    <title>Scope</title>
    <para>
    <command>Proxy</command> can be set multiple times and 
    affects on all following <command><xref linkend="cmdref-server"/></command> 
    and <command><xref linkend="cmdref-realm"/></command> commands
    until the end of the configuration file, or until the next 
    <command>Proxy</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Proxy on atoll.anywhere.com, port 3128:
Proxy atoll.anywhere.com
# Proxy on lota.anywhere.com, port 8090:
Proxy lota.anywhere.com:8090
# Disable proxy (direct connect):
Proxy
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-authbasic"/>,
    <xref linkend="cmdref-proxyauthbasic"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-proxyauthbasic">
  <refmeta>
    <refentrytitle>ProxyAuthBasic</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname><command>ProxyAuthBasic</command></refname>
    <refpurpose>defines &http; proxy user name and password</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ProxyAuthBasic</command>
      <arg choice="req">user:password</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ProxyAuthBasic</command> defines a user name and a password to use with a proxy server.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
      <command>ProxyAuthBasic</command> affects the
      next <command><xref linkend="cmdref-proxy"/></command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ProxyAuthBasic somebody:secret
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-authbasic"/>,
    <xref linkend="cmdref-proxy"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-r">
  <refmeta>
    <refentrytitle>R0 - R9</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>R0 - R9</command></refname>
    <refpurpose>sets random number range</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Rn</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Rn</command> initialize the <varname>$(Rn)</varname>
    template variable to a random number in the range <literal>0...number</literal>,
    so you can use the <varname>$(Rn)</varname> variable to display some
    random banners or random links in search results.
    </para>
    <para>
    See <xref linkend="top-section"/> for more information.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
R0 256
R1 1024
R2 10
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-readtimeout">
  <refmeta>
    <refentrytitle>ReadTimeOut</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ReadTimeOut</command></refname>
    <refpurpose>defines stalled connections timeout</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ReadTimeOut</command>
      <arg choice="req">time</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ReadTimeOut</command> defines connect timeout and stalled connections timeout.
    </para>
    <para>
    See the <command><xref linkend="cmdref-period"/></command> command
    description for <parameter>time</parameter> format.
    </para>
    <para>&def-is; <literal>30 seconds</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>ReadTimeOut</command> can be set multiple times and
    affect on all following <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command> command until the 
    end of the configuration file, or until the next <command>ReadTimeOut</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ReadTimeOut 30s
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-doctimeout"/>,
    <xref linkend="cmdref-holdbadhrefs"/>,
    <xref linkend="cmdref-maxneterrors"/>,
    <xref linkend="cmdref-neterrordelaytime"/>,
    <xref linkend="cmdref-parsertimeout"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-realm">
  <refmeta>
    <refentrytitle>Realm</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Realm</command></refname>
    <refpurpose>describes Web-space for indexing, using regex/wild patterns</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Realm</command>
      <arg>Subsection</arg>
      <arg>Method</arg>
      <arg>CmpType</arg>
      <group><arg>Match</arg><arg>NoMatch</arg></group>
      <arg choice="req">pattern</arg>
      <arg>alias</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Realm</command> works very similar to
    the <command><xref linkend="cmdref-server"/></command> command
    but takes a <emphasis>regular expression</emphasis> or
    <emphasis>string wildcards</emphasis> as a pattern
   (rather than a <emphasis>prefix</emphasis> pattern)
    and does not insert the pattern into the database
    as <emphasis>entry point</emphasis> &url;.
      <note>
      <para>
      To insert an &url; into the database, you can use the <command><xref linkend="cmdref-url"/></command> command.
      </para>
      </note>
    </para>
    <para><parameter>Subsection</parameter> is an optional parameter which can take
    one of the following values:
    <literal>site</literal>, <literal>world</literal>, with <literal>world</literal> being default.
    </para>
    <para>
    If <parameter>Subsection</parameter> is set to <literal>site</literal>,
    then a link between two documents is followed only if both documents belong to the same site.
    If <parameter>Subsection</parameter> is set to <literal>world</literal> then no site checking is done.
    </para>
    <para><parameter>Method</parameter> is an optional parameter which can take one of the following
    values:
    <literal>Allow</literal> (default),
    <literal>Disallow</literal>,
    <literal>CheckOnly</literal>,
    <literal>HrefOnly</literal>,
    <literal>CheckMP3</literal>,
    <literal>CheckMP3Only</literal>.
    </para>
    <para><parameter>CmpType</parameter> is an optional parameter to specify
    <emphasis>comparison type</emphasis> and can take either
    <literal>String</literal> or <literal>RegEx</literal> values,
    with <literal>String</literal> being the default.
    </para>
    <para>
    The <parameter>pattern</parameter> parameter define &url; pattern.
    All documents with &url; matching the given pattern are considered
    as <emphasis>corresponding</emphasis> to this <command>Realm</command> command.
    </para>   
    <para>The optional <parameter>alias</parameter> argument allows
    to provide an &url; rewrite rule, which is a powerful
    <link linkend="aliases">aliasing mechanism</link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Realm</command> &scope-global-multiple;.
    <note>
    <para>
    Mutual order of <command>Realm</command> and/or <command>Server</command> commands
    can be important. See <xref linkend="follow-difparam"/> for more details.
    </para>
    </note>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Index all HTTP sites in the .ru domain:
Realm http://*.ru/*

# The same using "Regex" match:
Realm Regex ^http://.*\.ru/

# Index everything but .com domain:
Realm NoMatch http://*.com/*
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-flushservertable"/>,
    <xref linkend="cmdref-server"/>,
    <xref linkend="cmdref-servertable"/>,
    <xref linkend="cmdref-subnet"/>,
    <xref linkend="cmdref-url"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-remotecharset">
  <refmeta>
    <refentrytitle>RemoteCharset</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>RemoteCharset</command></refname>
    <refpurpose>defines default character set for Server or Ream</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>RemoteCharset</command>
      <arg choice="req">charset</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>RemoteCharset</command> defines the default character
    set for the Web space described in all following 
    <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command> commands.
    </para>
    <para>This is usually required only for "bad" servers that do not
    send character set information in the &http; headers
    (<literal>Content-type: text/html; charset=some_charset</literal>)
    and do not have <literal>&lt;META NAME="Content" Content="text/html; charset="some_charset"&gt;</literal>
    in the document head.
    </para>
    <para>
    &def-is; <literal>latin1</literal> (<literal>ISO-8859-1</literal>).
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>RemoteCharset</command> can be set multiple times and
    affects on all following  
    <command><xref linkend="cmdref-server"/></command> and
    <command><xref linkend="cmdref-realm"/></command> commands
    until the end of the configuration file
    or until the next <command>RemoteCharset</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
RemoteCharset KOI8-r
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-browsercharset"/>,
    <xref linkend="cmdref-forceiischarset1251"/>,
    <xref linkend="cmdref-localcharset"/>,
    <xref linkend="cmdref-remotefilenamecharset"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-remotefilenamecharset">
  <refmeta>
    <refentrytitle>RemoteFileNameCharset</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>RemoteFileNameCharset</command></refname>
    <refpurpose>defines default character set of file and directory names</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>RemoteFileNameCharset</command>
      <arg choice="req">charset</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>RemoteFileNameCharset</command> is a fine-tuning command for indexing the
    <varname>url.file</varname> and <varname>url.path</varname> sections,
    usually for &ftp; sites, when the sites have national letters in directory
    and file names.
    </para>
    <para>
    By default, directory and file names (after <literal>%XX</literal> &url;-unescaping)
    considered to have the same character set with the character set specified in
    <command><xref linkend="cmdref-remotecharset"/></command>.
    <command>RemoteFileNameCharset</command> allows to set an alternative
    character set for directory and file names, different from
    <command><xref linkend="cmdref-remotecharset"/></command>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
RemoteFileNameCharset cp850
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-browsercharset"/>,
    <xref linkend="cmdref-forceiischarset1251"/>,
    <xref linkend="cmdref-localcharset"/>,
    <xref linkend="cmdref-remotecharset"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-replacevar">
  <refmeta>
  <refentrytitle>ReplaceVar</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ReplaceVar</command></refname>
    <refpurpose>creates or modifies a variable</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ReplaceVar</command>
      <arg choice="req">name</arg>
      <arg choice="req">value</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    Creates a variable with the given
    <parameter>name</parameter> and <parameter>value</parameter>,
    for further use in other &indexer.conf;
    or &search.htm; commands, or as a &search.htm; template variable.
    </para>
    <para>
    If the variable has previously been created with another
    <command>ReplaceVar</command> or <xref linkend="cmdref-importenv"/> command,
    then its old value is replaced.
    </para>
    <para>
    The <parameter>value</parameter> parameter can
    reference to other variables previously created by
    <command>ReplaceVar</command> or <xref linkend="cmdref-importenv"/> commands
    using <varname>$(name)</varname> syntax.
    </para>
    <para>Variables created using <command>ReplaceVar</command> are
    considered to have the character set with the one specified in
    <xref linkend="cmdref-localcharset"/>. When being displayed
    in search template, variable values are converted to
    <xref linkend="cmdref-browsercharset"/>.
    </para>
    <para>
    <command>ReplaceVar</command> can also be used to set 
    <link linkend="search-params">search query parameters</link>
    in &search.htm;, without having to pass them in &cgi; query
    string. This example sets sorting order to <varname>title</varname>,
    like if the <option>s=s&amp;su=title</option> parameters would have been
    passed in &cgi; query string:
    <programlisting>
ReplaceVar s s
ReplaceVar su title
    </programlisting>
    </para>
    <note>
      <para>
      <command>ReplaceVar</command> has higher precedence over &cgi; query string
      parameters. In the above example &search.cgi; will sort search results
      strictly in <varname>title</varname> ascending order, no matter what
      the user pass in <option>s</option> and <option>su</option> query string
      parameters.
      </para>
    </note>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ReplaceVar etcdir "/usr/local/mnogosearch/etc/"
Include $(etcdir)/include1.conf
Include $(etcdir)/include2.conf
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-importenv"/>,
      <xref linkend="cmdref-include"/>,
      <xref linkend="templates-oper-set"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-resultcontenttype">
  <refmeta>
    <refentrytitle>ResultContentType</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ResultContentType</command></refname>
    <refpurpose>specifies the <literal>Content-Type</literal> header produced by &search.cgi;</refpurpose>
    <refclass>&search.htm; </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ResultContentType</command>
      <arg choice="req">type</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ResultContentType</command> sets the <literal>Content-Type</literal>
    &http; response header generated by &search.cgi;.
    </para>
    <para>
    The value can include character set specification.
    </para>
    <para>
    &def-is; <literal>text/html; charset=$(BrowserCharset)</literal>.
    </para>
    <para>
    If <command>ResultContentType</command> is set to <literal>none</literal>,
    then the <literal>Content-Type</literal> header is not printed.
    This is useful if you execute &search.cgi; from another Web application
    which sends &http; headers itself, so &search.cgi;
    does not need to do it. An example of a &app-php; program using
    <command>system()</command> call to include &search.cgi;
    may look like this:
    <programlisting>
&lt;?
  include("../include/top.php");
  system("export QUERY_STRING=\"$QUERY_STRING\"; /path/to/search.cgi");
  include("../include/bot.php");
?&gt;    
    </programlisting>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ResultContentType text/plain

ResultContentType "text/xml; charset=utf-8"

ResultContentType none
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-browsercharset"/>
    <xref linkend="cmdref-httpheader"/>,
    <xref linkend="cmdref-usecookie"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-resultslimit">
  <refmeta>
    <refentrytitle>ResultsLimit</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ResultsLimit</command></refname>
    <refpurpose>sets the maximum number of results displayed</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ResultsLimit</command>
      <arg choice="req">limit</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>ResultsLimit</command> limits the number of results displayed to the user.
    </para>
    <para>
    When <command>ResultsLimit</command> is set to a <emphasis>positive</emphasis> number,
    the last result the user can navigate to is limited to the given number.
    For example, when <command>ResultsLimit</command> is <literal>1000</literal>,
    the user won't be able to navigate farther than page <literal>100</literal>
    assuming the default page size of <literal>10</literal>.
    </para>
    <para>
      Use <literal>0</literal> if you need <emphasis>unlimited</emphasis> number of results.      
    </para>
    <note>
      <para>
      The <varname>$(total)</varname> template variable still displays
      the <emphasis>real</emphasis> total number of the documents found.
      </para>
    </note>
    <para>
    This kind of limiting makes sense because a real person usually
    does not browse through too many pages, only bots and spiders do.
    <command>ResultsLimit</command> prevents the search server 
    from being loaded by bots, spiders and attackers.
    </para>
    <para>
    &def-is; <literal>1000</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
     <command>ResultsLimit</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
ResultsLimit 5000
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-groupbysite"/>,
    <xref linkend="search-params"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-reversealias">
  <refmeta>
    <refentrytitle>ReverseAlias</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ReverseAlias</command></refname>
    <refpurpose>rewrites &url; before inserting to the database</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis> 
    <command>ReverseAlias</command>
    <group><arg>Prefix</arg><arg>Regexp</arg></group>
    <group><arg>Case</arg><arg>NoCase</arg></group>  
    <arg choice="req">before</arg>
    <arg choice="req">after</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>ReverseAlias</command> allows to rewrite &url; before it is inserted into the database.
      Unlike <xref linkend="cmdref-alias"/> (which performs mapping right before a document is downloaded),
      the <command>ReverseAlias</command> command performs mapping immediately after a new link is found.
    </para>
    <para>
      <command>ReverseAlias</command> can be used to remove undesired &url; parts, like
      session variables, to normalize host names, and so on.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# Convert short host name to long host name
ReverseAlias http://mysite.com/   http://www.mysite.com/
Server http://www.misite.com/
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-alias"/>,
    <xref linkend="cmdref-aliasprog"/>,
    <xref linkend="alias-reverse"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-robots">
  <refmeta>
    <refentrytitle>Robots</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Robots</command></refname>
    <refpurpose>defines whether to use <filename>robots.txt</filename></refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Robots</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Robots</command> defines whether to use
    <filename>robots.txt</filename> and
    <literal>&lt;META NAME="robots"&gt;</literal> exclusions.
    </para>
    <para>
    Setting <command>Robots</command> to <literal>no</literal> can be useful when
    running &mnogo; for
    <link linkend="general-linkval">site validation</link> purposes,
    as well as when indexing your own Web site.
    </para>
    <para>
    &def-is-yes;, for polite crawling purposes.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Robots</command> can be used multiple times and
    affects on all following <command><xref linkend="cmdref-server"/></command>
    and <command><xref linkend="cmdref-realm"/></command> commands
    until the end of the configuration file, or until the next
    <command>Robots</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Robots no
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-crawldelay"/>,
    <xref linkend="cmdref-disallow"/>,
    <xref linkend="cmdref-index"/>,
    <xref linkend="cmdref-indexif"/>,
    <xref linkend="cmdref-noindexif"/>,
    <xref linkend="cmdref-usesitemap"/>.    
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-savesectionsize">
  <refmeta>
    <refentrytitle>SaveSectionSize</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>SaveSectionSize</command></refname>
    <refpurpose>defines whether to store section sizes for better relevancy quality</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>SaveSectionSize</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    When <command>SaveSectionSize</command> is set to <literal>yes</literal>,
    &indexer; stores additional information about section size
    (messured in <emphasis>number of words</emphasis>)
    for every document section. Using section sizes makes it possible
    to generate better score values at search time by taking
    into account <emphasis>frequency</emphasis> of every search query word in its section.
    </para>
    <note>
    <para>
    <command>SaveSectionSize <literal>yes</literal></command>
    is also required for
    <link linkend="search-exactsectionmatch">exact section match</link> queries.
    </para>
    </note>
    <para>
    Setting <command>SaveSectionSize</command> to <literal>no</literal>
    makes search index size about <literal>10%</literal> smaller.
    This slightly improves search performance, but makes search quality worse.
    <!--performance--><!--quality-->
    </para>
    <para>
    <command>SaveSectionSize</command> must have the same value in
    &indexer.conf; and &search.htm;.
    </para>
    <para>
    &def-is-yes;.
    </para>
    <para>
    <command>SaveSectionSize</command> appeared 
    &mnogo; version <literal>3.3.0</literal>. Versions prior
    to <literal>3.3.0</literal> did not store section sizes.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
SaveSectioSize yes
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-section">
  <refmeta>
    <refentrytitle>Section</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Section</command></refname>
    <refpurpose>defines a document section</refpurpose>
    <refclass>
      &indexer.conf;
      &search.htm;
    </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Section</command>
      <arg choice="req">name</arg>
      <arg choice="req">number</arg>
      <arg choice="req">maxlen</arg>
      <arg choice="opt">when</arg>
      <arg choice="opt">format</arg>
      <arg choice="opt">cloneflag</arg>
      <arg choice="opt">separator</arg>
      <arg choice="opt"><arg choice="req">source</arg> <arg choice="req">pattern</arg> <arg choice="req">replacement</arg></arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>When used in &search.htm;,
    the <command>Section</command> command requires only the first three
    parameters and activates recognition of 
    <emphasis>section name references</emphasis> in search queries,
    for example:
    <programlisting>
title:word1 body:word2
    </programlisting>
    See <xref linkend="search-secnoref"/> for details.
    There are no any other purposes of using the
    <command>Section</command> command
    in &search.htm;. The rest of this article
    applies mostly to &indexer.conf;.
    </para>
    <para><literal>string</literal> is the section name and
    <literal>number</literal> is the section <varname>ID</varname> between
    <literal>0</literal> and <literal>255</literal>.
    Use <literal>0</literal> if you don't want to index the sections.
    </para>
    <note>
    <para>
    It is recommended to use different sections <varname>ID</varname>
    for different documents parts, which makes possible to
    <link linkend="search-changeweight">set different weights for the
    different document parts</link>, as well as 
    <link linkend="search-secnoref">restrict search to a section</link>
    at search time.
    </para>
    </note>
    <para>
    The <parameter>maxlen</parameter> argument contains the maximum
    length of the section which should be stored in the database.
    If <literal>maxlen</literal> is set to <literal>0</literal>,
    then this section is not stored in the database and therefore is not
    available at search time using <varname>$(name)</varname> syntaxt in
    &search.htm;.
    </para>
    <para>
    <parameter>when</parameter> is an optional parameter defining when the
    section is to be created. The following values are possible:
    <itemizedlist>
      <listitem>
        <para>
        <literal>afterheaders</literal> - creates the section after processing of &http; headers,
        which allows to replace the headers returned by an &http; server to your own values.
        For example, if the &http; server is not well configured and returns
        <literal>Content-Type: text/plain</literal> headers for the documents
        which are in fact &xml; or &html; documents, or
        <literal>Content-Type: application/octet-stream</literal>
        for <application>Word</application> or <application>Excel</application> documents,
        you can overwrite the <literal>Content-Type</literal> header and thus
        have &indexer; invoke a proper external or internal parser.
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>afterguesser</literal> - creates the section
        after execution of
        <link linkend="charset-guesser"><emphasis>character set guesser</emphasis></link>.
        A special variable <literal>${HTTP.LocalCharsetContent}</literal>
        is additionally available for use in the <parameter>source</parameter> argument,
        which represents raw document content converted to <xref linkend="cmdref-localcharset"/>.
        <literal>afterguesser</literal> is suitable for <emphasis>user defined sections</emphasis>,
        to cut pieces of text from between desired tags with help of the 
        <parameter>source</parameter>, <parameter>pattern</parameter> and <parameter>replacement</parameter>
        parameters.
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>afterparser</literal> - creates the section after
        extracting pieces of text from the document
        (i.e. after removing tags in the case of &html; or &xml;),
        and before breaking them into individual words. This is the default
        value for the <literal>when</literal> parameter.
        </para>
      </listitem>
    </itemizedlist>
    </para>
    <para>
    <parameter>format</parameter> is a flag telling &indexer;
    which parser to use for the section. Two values are understood:
    <itemizedlist>
      <listitem><para><literal>text</literal> - use text parser</para></listitem>
      <listitem><para><literal>html</literal> - use &html; parser</para></listitem>
    </itemizedlist>
    The <parameter>format</parameter> parameter is designed for
    use in combination with the simple
    type of <xref linkend="cmdref-htdbdoc"/> queries
    (i.e. consisting of a list of data columns,
    without full &http; headers). &def-is; <literal>text</literal>.
    If your &sql; table contains data in &html; format, you can specify 
    the <literal>html</literal> option to force removing of &html; tags.
    See <xref linkend="htdb"/> for details about simple
    <xref linkend="cmdref-htdbdoc"/> queries.
    </para>
    <para>
    The <parameter>cloneflag</parameter> parameter is a flag
    describing whether the section should affect clone detection.
    It can be <literal>DetectClone</literal> (or <literal>cdon</literal>),
    or <literal>NoDetectClone</literal> (or <literal>cdoff</literal>). By default,
    all <literal>url.*</literal> section values (i.e. various &url; parts) are not
    taken in account for clone detection, while any other
    sections take part in clone detection.
    </para>
    <para>
    <parameter>separator</parameter> is a string that separates
    consequent chunks of the same section.
    </para>
    <para>
    <title>User-defined sections</title>
    The <parameter>source</parameter>, <parameter>pattern</parameter> and <parameter>replacement</parameter>
    parameters can be used to extract <firstterm>user defined sections</firstterm>.
    </para>
    <para>
    <parameter>source</parameter> can include variable references using
    <varname>${VARNAME}</varname> syntax. Multiple variable references allowed.
    </para>
    <para>
    <parameter>pattern</parameter> represents a regular expression to specify which parts 
    of <parameter>source</parameter> should go to the section.
    </para>
    <para>
    <parameter>replacement</parameter> defines how the extracted parts of <parameter>source</parameter>
    are comnibed into the result. <parameter>replacement</parameter> can contain references of the form
    <varname>$n</varname>, where <varname>n</varname> is a number in the range <literal>0-9</literal>.
    Every reference is replaced to text captured by the <varname>n</varname>-th parenthesized sub-pattern.
    <varname>$0</varname> refers to text matched by the whole pattern. Opening parentheses are counted
    from left to right (starting from <literal>1</literal>) to obtain the number of the capturing sub-pattern. 
    </para>
    <para>
    <programlisting>
# Use a combination of URL and raw body content to extract
# the host part of URL and title into the section "udef"
Section HTTP.Content 0 0
Section udef  1 256 cdoff  "" "${URL}:${HTTP.Content}" "^http://([^/]*)/.*&lt;title&gt;(.*)&lt;/title&gt;" "$1 $2"
    </programlisting>
    </para>
    <para>
    <title>Conditional sections</title>
    The <parameter>source</parameter>, <parameter>pattern</parameter> and <parameter>replacement</parameter>
    arguments can also be used to create sections only under certain conditions:
    <programlisting>
# Create "body" only for the given host name
Section HTTP.Content 0 0
Section body  1 256 cdoff "" "${URL}:${HTTP.Content}" "^http://www.mysite.com/.*&lt;body&gt;(.*)&lt;/body&gt;" "$1"
    </programlisting>
    </para>
    <para>
    <title>Special purpose sections</title>
    There is a special <literal>User.Date</literal> section.
    It makes possible
    to use a user defined meta tag (or any other document part)
    as an alternative <literal>Last-Modified</literal> value.
    A number of widespread formats is understood:
      <programlisting>
Sun, 06 Nov 1994 08:49:37 GMT
Sun, 6 Nov 1994 08:49:37 GMT
Sunday, 06-Nov-94 08:49:37 GMT
Sun Nov 6 08:49:37 1994
1994-11-06
06.11.1994
1104537600  -- Unix timestamp
      </programlisting>
      When <literal>User.Date</literal> is defined,
      the <literal>Last-Modified</literal> &http; header
      is ignored, and the document modification time is
      taken from <literal>User.Date</literal> instead.
      This can be useful when indexing dynamic documents.
    </para>
    <para>
    <literal>nobody</literal> is another section with a special meaning.
    When parsing &html; documents, &indexer; ignores the words outside
    the <literal>&lt;body&gt;</literal> and <literal>&lt;/body&gt;</literal> tags by default.
    To activate indexing of these words, you can define a special section
    <literal>nobody</literal>, which should have the same <varname>ID</varname> and
    length with the section <literal>body</literal>.
    Making &indexer; see the words outside the body tags can be useful to
    index a remote site with broken &html; mark-up (when you can't modify
    the pages), or to index local &html; pages having &ssi;
    (sever side include) directives directly from disk using &scheme-file; schema,
    even if the <literal>&lt;body&gt;</literal> and
    <literal>&lt;/body&gt;</literal> tags are not in the &html;
    pages themselves, but in shared files included using &ssi; directives, 
    like <command><literal>&lt;!--#include virtual="../include/top.html"--&gt;</literal></command>.
    For example:
    <programlisting>
Section body   1 256
Section nobody 1 256
    </programlisting>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Section body                    1       256
Section title                   2       128
Section meta.keywords           3       128
Section meta.description        4       128
Section header.server           5       64
Section url.file                6       0
Section url.path                7       0
Section url.host                8       0
Section url.proto               9       0
Section crosswords              10      0
Section Charset                 11      32
Section Content-Type            12      64
Section Content-Language        13      16
Section attribute.alt           14      128
Section attribute.label         15      128
Section attribute.summary       16      128
Section attribute.title         17      128
Section References              18      0
Section Message-ID              19      0
Section Parent-ID               20      0
Section MP3.Song                21      128
Section MP3.Album               22      128
Section MP3.Artist              23      128
Section MP3.Year                24      128
Section CachedCopy              25      64000
Section attribute.face          27      0
Section attribute.title         28      0 "."

# A user-defined section
Section h1                      29      128 "&lt;h1&gt;(.*)&lt;/h1&gt;" $1

# User-defined date extracted from the "Date" meta-tag
Section User.Date               0       10 '&lt;META NAME="Date" +CONTENT="([^"]*)"&gt;' "$1"

# Replacing Content-Type to application/msword
Section Content-Type            0       64 afterheaders cdoff "" "${URL}" "http://site/*.doc" "application/msword"

# Using "afterguesser" in conjuction with ${HTTP.LocalCharsetContent}
Section HTTP.LocalCharsetContent 0      0
Section h1lcs                   30      128 afterguesser cdoff "" "${HTTP.LocalCharsetContent}" "&lt;h1&gt;(.*)&lt;/h1&gt;" $1

# Using a simple HTDBDoc query for a SQL table with text and HTML columns
Section 1 256 column1 text
Section 2 256 colimn2 html
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-maxdocsize"/>,
      <xref linkend="cmdref-maxwordlength"/>,
      <xref linkend="cmdref-minwordlength"/>,
      <xref linkend="cmdref-uselocalcachedcopy"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-server">
  <refmeta>
    <refentrytitle>Server</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Server</command></refname>
    <refpurpose>describes Web-space for indexing</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Server</command>
      <arg>Method</arg>
      <arg>Subsection</arg>
      <arg choice="req">URL</arg>
      <arg>alias</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>This is the main command of the &indexer.conf; file. It's used
    to describe the Web-space you want to index. It also inserts
    the given &url; into the database to use it as a start point
    (<emphasis>entry point</emphasis>).
    </para>
    <para>
    <command>Server</command> can be given multiple times, as many times
    as the number of different servers (or server parts) you want to index.
    </para>
    <para><parameter>Method</parameter> is an optional parameter
    which can take one of the following values:
    <itemizedlist>
     <listitem><para><literal>Allow</literal></para></listitem>
     <listitem><para><literal>Disallow</literal></para></listitem>,
     <listitem><para><literal>CheckOnly</literal></para></listitem>,
     <listitem><para><literal>HrefOnly</literal></para></listitem>,
     <listitem><para><literal>CheckMP3</literal></para></listitem>,
     <listitem><para><literal>CheckMP3Only</literal></para></listitem>,
     <listitem><para><literal>Skip</literal></para></listitem>.
    </itemizedlist>
    The default <parameter>Method</parameter> value is <literal>Allow</literal>.
    The meaning of the different <parameter>Method</parameter> values
    is similar to the commands with the same names
    (<command><xref linkend="cmdref-allow"/></command>,
     <command><xref linkend="cmdref-disallow"/></command>, etc).
    </para>
    <para>
    <parameter>Subsection</parameter> is an optional parameter
     to specify a part of the server. It can take the following values:
    <itemizedlist>
      <listitem>
        <para>
        <literal>page</literal> describes Web space
        consisting of one document with the address
        exactly equal to <parameter>&url;</parameter>.
        The other documents for the same site won't be indexed
        (unless they have their own &cmd-server; or &cmd-realm; commands).
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>path</literal> describes all documents
        from the same host and under the same path
        with <parameter>&url;</parameter>.
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>site</literal> describes all documents
        from the same host with <parameter>&url;</parameter>.
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>world</literal> means <emphasis>any document</emphasis>
        in the world. Should typically be accompanied with a number
        of <command><xref linkend="cmdref-disallow"/></command> commands.
        </para>
      </listitem>
      <listitem>
        <para>
        <literal>urllist</literal> works almost like <literal>page</literal> but
        also allows to follow from the &url; given in the current <command>Server</command>
        command to any &url; corresponding to a <link linkend="cmdref-realm">Realm site</link>
        command, even if the two &url;s belong to different sites.
        </para>
      </listitem>
    </itemizedlist>
    </para>
    <para>
    The default <parameter>Subsection</parameter> value is <literal>path</literal>.
    </para>
    <para>
     Have a look into <xref linkend="follow"/> for more details.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Index the entire server "host1":
Server http://host1/

# Index a subdirectory of "local2":
Server http://host2/subdir/

# Index a single document from host3:
Server page http://host3/path/main.html

# Index the entire server host4 using a non-root page as an entry point:
Server site http://host4/path/main.html

# You can also specify optional parameter "alias". This example will
# index server "http://www.mnogosearch.org/" directly from disk instead of
# fetching from HTTP server:
Server http://www.mnogosearch.org/  /home/httpd/www.mnogosearch.org/
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-flushservertable"/>,
      <xref linkend="cmdref-realm"/>,
      <xref linkend="cmdref-servertable"/>,
      <xref linkend="cmdref-subnet"/>,
      <xref linkend="cmdref-url"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-servertable">
  <refmeta>
    <refentrytitle>ServerTable</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ServerTable</command></refname>
    <refpurpose>loads servers to index from the database</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ServerTable</command>
      <arg choice="req">table_addr</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
     <command>ServerTable</command> loads information about
     servers to index from the table specified in the
     argument <parameter>table_addr</parameter> using &url; notation.
    </para>
    <para>
    Have a look into <xref linkend="srvtable"/> for more details on using
    <command>ServerTable</command>.
    </para>
    <para>
    Have a look into
    <filename>/usr/local/mnogosearch/share/mysql/create.single.sql</filename>
    and <xref linkend="db-server"/> to see the table structure.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ServerTable mysql://user:pass@host/dbname/tablename
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-flushservertable"/>,
      <xref linkend="cmdref-realm"/>,
      <xref linkend="cmdref-server"/>,
      <xref linkend="cmdref-subnet"/>,
      <xref linkend="cmdref-url"/>,
      <xref linkend="cmdref-usercachequery"/>.
      </para>
  </refsect1>
</refentry>



<refentry id="cmdref-serverweight">
  <refmeta>
    <refentrytitle>ServerWeight</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>ServerWeight</command></refname>
    <refpurpose>defines server weight for Popularity Rank calculation</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>ServerWeight</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>ServerWeight</command> defines weight
      for <link linkend="poprank">Popularity Rank</link> calculation.
    </para>
    <para>
     &def-is; <literal>1</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>ServerWeight</command> &scope-server-until-next; <command>ServerWeight</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
ServerWeight 1
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-poprankfeedback"/>,
    <xref linkend="cmdref-poprankshowcntratio"/>,
    <xref linkend="cmdref-poprankshowcntweight"/>,
    <xref linkend="cmdref-poprankskipsamesite"/>,
    <xref linkend="cmdref-poprankuseshowcnt"/>,
    <xref linkend="cmdref-poprankusetracking"/>,
    <xref linkend="cmdref-collectlinks"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-skip">
  <refmeta>
    <refentrytitle>Skip</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Skip</command></refname>
    <refpurpose>skips visiting the documents with &url;
    matching the given pattern</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Skip</command>
      <group><arg>Match</arg><arg>NoMatch</arg></group>
      <group><arg>Case</arg><arg>NoCase</arg></group>
      <group><arg>String</arg><arg>Regexp</arg></group>
      <arg choice="req" rep="repeat">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    &indexer; skips downloading and parsing the documents with
    &url; matching the given patterns.
    </para>
    <para>
    Every time a matching document expires and appears in the crawler queue,
    &indexer; just marks the document
    as <emphasis>fresh</emphasis> again by modifying
    its <literal>next_index_time</literal> value according
    to <command><xref linkend="cmdref-period"/></command> settings.
    Word and section information about the document remains untouched.
    </para>
    <para>The meaning of the first three optional parameters
    is exactly the same as in the <xref linkend="cmdref-allow"/> command.
    </para>
    <note>
      <para>
        <command>Skip</command>
        can be useful for excluding sites from revisiting,
        for example, when the sites are temporarily not available.
      </para>
    </note>
    <para>It's possible to use multiple patterns in
      the same <command>Skip</command> command.
    </para>
    <para><command>Skip</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Skip http://site1/* http://site2/*
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-period"/>,
      <xref linkend="cmdref-skipif"/>.
    </para>
  </refsect1>
</refentry>


<refentry id="cmdref-skipif">
  <refmeta>
    <refentrytitle>SkipIf</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>SkipIf</command></refname>
    <refpurpose>skip revisiting the documents with a section
    matching the given pattern</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>SkipIf</command>
      <group><arg>Match</arg><arg>NoMatch</arg></group>
      <group><arg>Case</arg><arg>NoCase</arg></group>
      <group><arg>String</arg><arg>Regexp</arg></group>
      <arg choice="req" rep="repeat">Section</arg>
      <arg choice="req" rep="repeat">Pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    &indexer; skips downloading and parsing the documents with
    the given <option>Section</option> matching the given
    <option>Pattern</option>.
    </para>
    <para>
    Every time a matching document expires and appears in the crawler queue,
    &indexer; just marks the document
    as <emphasis>fresh</emphasis> again by modifying
    its <literal>next_index_time</literal> value.
    Word and section information about the document remains untouched.
    </para> 
    <note>
      <para>
      <command>SkipIf</command> can be useful for excluding
      sites from revisiting when, for example, the sites are
      temporarily not available.
      </para>
    </note>
    <para>The meaning of the first three optional parameters
    is exactly the same as in the <command><xref linkend="cmdref-allow" /></command>
    and <command><xref linkend="cmdref-indexif"/></command>
    commands.
    </para>
    <para>
    The <option>Section</option> parameter specifies which
    section is checked against the <option>Pattern</option>.
    It can also be a concatenation of multiple sections, composed
    with help of <varname>${SECTION}</varname> syntax. 
    </para>
    <para>It's possible to use multiple patterns in
    the same <command>SkipIf</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>SkipIf</command> &scope-global-multiple;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Skip revisiting documents with title starting with the word Archive
SkipIf Title Archive*

# Skip revisiting of text/plain documents only from the given site.
SkipIf "${URL}#${Content-Type}" "http://site/*#text/plain"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-allow"/>,
      <xref linkend="cmdref-checkmp3"/>,
      <xref linkend="cmdref-checkmp3only"/>,
      <xref linkend="cmdref-disallow"/>,
      <xref linkend="cmdref-hrefonly"/>,
      <xref linkend="cmdref-skip"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-spell">
  <refmeta>
    <refentrytitle>Spell</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Spell</command></refname>
    <refpurpose>loads an &app-ispell; dictionary file</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Spell</command>
      <arg choice="req">language</arg>
      <arg choice="req">charset</arg>
      <arg choice="req">filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>Spell</command> loads a dictionary file
    for <link linkend="ispell">&app-ispell based stemming</link>.
    </para>
    <para>
    <parameter>filename</parameter> can be either absolute or relative to 
    <filename>/etc</filename> directory of the &mnogo; installation.
  </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Spell en us-ascii ispell/british.xlg
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-ispelluseprefixes"/>,
    <xref linkend="cmdref-sqlwordforms"/>,
    <xref linkend="cmdref-stopwordfile"/>,
    <xref linkend="cmdref-synonym"/>,
    <xref linkend="cmdref-usenumericoperators"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-sqlwordforms">
  <refmeta>
  <refentrytitle>SQLWordForms</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>SQLWordForms</command></refname>
    <refpurpose>loads synonyms or word forms from the database</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>SQLWordForms</command>
      <arg choice="req">str</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Desription</title>
    <para>
    <command>SQLWordForms</command> provides a fuzzy search method,
    alternative to <link linkend="synonyms">Synonyms</link> and
    <link linkend="ispell">Ispell</link>.
    </para>
    <para>
    <command>SQLWordForms</command> allows to specify an &sql;
    query which will be executed to generate word forms or synonyms
    from the database. The query must return exactly one column with
    individual word forms or synonyms in separate rows.
    </para>
    <para>
    The query is sent to the database specified in
    the <command><xref linkend="cmdref-dbaddr"/></command> command.
    If the case of multiple <command><xref linkend="cmdref-dbaddr"/></command> commands,
    only the first <command><xref linkend="cmdref-dbaddr"/></command>
    is used for word forms generating.
    </para>
    <para>
    The &sql; query is executed for every word typed by the user,
    with the <varname>$1</varname> variable replaced to the word.
      <note>
        <para>
        When using <link linkend="cluster">cluster</link>,
        the <command>SQLWordForms</command> command
        must be specified in the cluster node &xml; templates - not in the
        front-end &html; template.
        </para>
      </note>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
SQLWordForms "SELECT sp1.form FROM spell sp1, spell sp2 WHERE sp1.word=sp2.word AND sp2.form='$1'"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-ispelluseprefixes"/>,
    <xref linkend="cmdref-spell"/>,
    <xref linkend="cmdref-stopwordfile"/>,
    <xref linkend="cmdref-synonym"/>,
    <xref linkend="cmdref-usenumericoperators"/>,
    <xref linkend="dumpspell"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-starthops">
  <refmeta>
    <refentrytitle>StartHops</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>StartHops</command></refname>
    <refpurpose>defines <varname>Hops</varname> value for start &url;s</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>StartHops</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>StartHops</command> specifies <varname>hops</varname>
    value which is used for start &url;s, i.e.
    for the &url; argument of the &cmd-server; commands.
    </para>
    <para>&def-is-0;.</para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>StartHops</command>  
    affects all following &cmd-server; commands until the end
    of the configuration file, or until the next 
    <command>StartHops</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxhops"/>,
    <xref linkend="cmdref-maxdocpersite"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-stopwordfile">
  <refmeta>
    <refentrytitle>StopwordFile</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>StopwordFile</command></refname>
    <refpurpose>loads stopwords file</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>StopwordFile</command>
      <arg choice="req">filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>StopwordFile</command> loads stop-words from the given text file.
    </para>
    <para><parameter>filename</parameter>
    can be either absolute, or relative to &mnogo; <filename>/etc</filename>
    directory.
    </para>
    <para>
     It's possible to use multiple <command>StopwordFile</command> commands,
     to load stop-words from multiple files.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
StopwordFile stopwords/en.sl
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-ispelluseprefixes"/>,
    <xref linkend="cmdref-spell"/>,
    <xref linkend="cmdref-sqlwordforms"/>,
    <xref linkend="cmdref-synonym"/>,
    <xref linkend="cmdref-usenumericoperators"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-strictmodethreshold">
  <refmeta>
  <refentrytitle>StrictModeThreshold</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>StrictModeThreshold</command></refname>
    <refpurpose>threshold to switch to a less strict search mode</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>StrictModeThreshold</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    If search returns fewer results than the given number,
    then &search.cgi; automatically switches from
    the <option>m=all</option> mode (<emphasis>all words</emphasis>)
    to the less strict <option>m=any</option> mode
    (<emphasis>any word</emphasis>).
   </para>
   <para>
   The number of results which were found in the <emphasis>stricter</emphasis>
   mode is available in the <varname>$(StrictModeFound)</varname>
   template variable.
   </para>
   <para>
    &def-is-0;, which means don't switch automatically
    to a less strict mode.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
StrictModeThreshold 10
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-stripaccents">
  <refmeta>
  <refentrytitle>StripAccents</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>StripAccents</command></refname>
    <refpurpose>converts letters to their non-accented counterparts</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>StripAccents</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>StripAccents</command> is designed for the databases not supporting
    accent insensitive collations. When <command>StripAccents</command>
    is set to <literal>yes</literal>, all accented letters are
    converted to their non-accented counterparts before storing
    information into the search index, and before loading
    information from the word index.
    </para>
    <para>
    <command>StripAccents</command> must be set to the same values
    in both &indexer.conf; and &search.htm;.
    </para>
    <para>
     &def-is-no;
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
      <command>StripAccents</command> &scope-global-single;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
StripAccents yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-casefolding"/>,
      <xref linkend="accentinsensitive"/>,
      <xref linkend="accenthilight"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-subnet">
  <refmeta>
    <refentrytitle>Subnet</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Subnet</command></refname>
    <refpurpose>Subnet</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Subnet</command>
      <arg>Method</arg>
      <arg>MatchType</arg>
      <arg choice="req">pattern</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>The <command>Subnet</command> command is another way to 
    describe the Web area for indexing. It works almost
    like &cmd-server; command but takes a string with wildcards as its
    <parameter>pattern</parameter> argument which is compared against
    the <acronym>IP</acronym> address instead of the &url;.
    </para>
    <para>
    <parameter>Pattern</parameter> can have
    <literal>?</literal> and <literal>*</literal> signs
    meaning <emphasis>one character</emphasis> and
    <emphasis>any number of characters</emphasis> respectively.
    </para>
    <para>
    The <parameter>MatchType</parameter> optional parameter
    can be either <literal>Match</literal> or <literal>NoMatch</literal>,
    with the former as default. When <parameter>MatchType</parameter>
    is set to <literal>NoMatch</literal>, the meaning of the command changes
    inside out: <emphasis>index documents which don't belong
    to the given <command>Subnet</command></emphasis>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Index the given subnet:
Subnet 192.168.*.*

# Index everything but the given subnet:
Subnet NoMatch 195.*.*.*
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-flushservertable"/>,
    <xref linkend="cmdref-realm"/>,
    <xref linkend="cmdref-server"/>,
    <xref linkend="cmdref-servertable"/>,
    <xref linkend="cmdref-url"/>.
  </para>
  </refsect1>
</refentry>


<refentry id="cmdref-substringmatchminwordlength">
  <refmeta>
    <refentrytitle>SubstringMatchMinWordLength</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>SubstringMatchMinWordLength</command></refname>
    <refpurpose>defines minimal word length allowed for substring match</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>SubstringMatchMinWordLength</command>
      <arg choice="req">length</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para> If <parameter>length</parameter> is <literal>0</literal>
    then word match type for all words in a search query is controlled only
    by the value of the <option>wm</option> 
    <link linkend="search-params">search parameter</link> value.
    </para>
    <para>
    With a positive <parameter>length</parameter> value,
    the words shorter than the given length are searched
    using <emphasis>full word match</emphasis>,
    even if the <option>wm</option> search parameter tells
    to use one of the <emphasis>substring match types</emphasis>:
    <option>wm=beg</option>, <option>wm=sub</option> or <option>wm=end</option>.
    This can be useful for performance purposes, when
    substring match for short words returns too many hits.
    <!--performance-->
    </para>
    <para>&def-is-0;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
SubstringMatchMinWordLength 2
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-maxwordlength"/>,
    <xref linkend="cmdref-minwordlength"/>,
    description of the <option>wm</option> search parameter in
    <xref linkend="search-params"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-suggest">
  <refmeta>
    <refentrytitle>Suggest</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Suggest</command></refname>
    <refpurpose>Display misspelled search word suggestions</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Suggest</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Suggest</command> activates generating misspelled search
    word suggestions. Whenever a search query returns no results,
    &search.cgi; looks into the query and checks every not found word if
    it can be replaced by another similar word to make the query return
    some results.
    </para>
    <para>
    Suggestion generator uses word statistics taking
    in account the word occurrences in the database and proximity between
    the original and the suggested word. If a suggestion is found, 
    &mnogo; will display a &quot;Did you mean: (suggested query)?&quot; link.
    You can follow the link and see search results for the suggested
    query.
    </para>
    <para>
    In order to start using misspelled word suggestions you need to
    create word statistics once, using
    &quot;<userinput>indexer -Ewordstat</userinput>&quot;.
    You can also periodically recreate word statistics using 
    &quot;<userinput>indexer -Ewordstat</userinput>&quot;,
    especially after bulk indexing.
    </para>
    <para>
    Misspelled word suggestion currently works for the languages using
    <emphasis>Latin</emphasis> script only,
    and does not work for other scripts,
    e.g. <emphasis>Arabic</emphasis>, <emphasis>Cyrillic</emphasis>,
    <emphasis>Hebrew</emphasis>, etc.
    Suggestions for <emphasis>non-Latin</emphasis> scripts will be
    added in the future releases.
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Suggest yes
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-synonym">
  <refmeta>
    <refentrytitle>Synonym</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Synonym</command></refname>
    <refpurpose>loads a synonym list from a file</refpurpose>
    <refclass>&search.htm; </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Synonym</command>
      <arg choice="req">filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>Synonym</command> loads
    synonyms from a file, for
     <link linkend="synonyms">synonym-based fuzzy search</link>.
    </para>
    <para>
    The file name can be either absolute or
    relative to <filename>/etc</filename> directory of the &mnogo; installation.
    </para>
    <para>
    The <command>Synonym</command> command can be specified multiple times, to
    load synonyms from multiple files.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Synonym synonym/english.syn
Synonym synonym/russian.syn
Synonym synonym/francais.syn
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-complexsynonyms"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-ispelluseprefixes"/>,
    <xref linkend="cmdref-spell"/>,
    <xref linkend="cmdref-sqlwordforms"/>,
    <xref linkend="cmdref-stopwordfile"/>,
    <xref linkend="cmdref-usenumericoperators"/>
    <xref linkend="synonyms"/>.   
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-syslogfacility">
  <refmeta>
    <refentrytitle>SyslogFacility</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>SyslogFacility</command></refname>
    <refpurpose>sets syslog facility</refpurpose>
    <refclass>&indexer.conf; &search.htm; </refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>SyslogFacility</command>
      <arg choice="req">facility</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>SyslogFacility</command> set the <emphasis>facility</emphasis>
     &mnogo; uses to display log messages.
    </para>
    <para>
    The <parameter>facility</parameter> parameter uses the same facility 
    names as in the <filename>syslog.conf</filename> or <filename>rsyslog.conf</filename> files.
    The exact list of supported facility names depends on platform.
    Typically these names are available:
    <simplelist>
      <member><literal>auth</literal></member>
      <member><literal>authpriv</literal></member>
      <member><literal>cron</literal></member>
      <member><literal>daemon</literal></member>
      <member><literal>ftp</literal></member>
      <member><literal>kern</literal></member>
      <member><literal>lpr</literal></member>
      <member><literal>mail</literal></member>
      <member><literal>news</literal></member>
      <member><literal>syslog</literal></member>
      <member><literal>user</literal></member>
      <member><literal>uucp</literal></member>
      <member><literal>local0</literal></member>
      <member><literal>local1</literal></member>
      <member><literal>local2</literal></member>
      <member><literal>local3</literal></member>
      <member><literal>local4</literal></member>
      <member><literal>local5</literal></member>
      <member><literal>local6</literal></member>
      <member><literal>local7</literal></member>
    </simplelist>
    </para>
    <para>
    For the list of possible facility names see <filename>syslog.conf(5)</filename> or
    <filename>rsyslog.conf(5)</filename> <application>man</application> pages.
    </para>
    <para>
    &def-is; <literal>local7</literal>.
    </para>
    <para>
    If <command>SyslogFacility</command> is set to <literal>none</literal>,
    then no logging is done to <application>syslog</application>.
    <note>
      <para>
      <literal>SyslogFacility none</literal> does not suppress logging
      to <filename>stderr</filename>. Use <literal>indexer -l</literal>
      to suppress logging to <filename>stderr</filename>.
      </para>
    </note>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
SyslogFacility local7
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-customlog"/>,
      <xref linkend="cmdref-log2stderr"/>,
      <xref linkend="cmdref-loglevel"/>,
      <xref linkend="syslog"/>.
  </para>
  </refsect1>
</refentry>



<refentry id="cmdref-tag">
  <refmeta>
    <refentrytitle>Tag</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>Tag</command></refname>
    <refpurpose>assigns a generic grouping tag to a set of documents</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>Tag</command>
      <arg choice="req">string</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>Tag</command> assigns a special <emphasis>tag</emphasis> value
    to a group of documents (typically servers).
    </para>
    <para>
    Tags can further be used to limit search results returned by &search.cgi; 
    with help of the <option>t=xxx</option>
    <link linkend="search-params">search parameter</link>, as well as
    to limit an <link linkend="tags-indexer">&indexer; action</link>
    to documents with a certain tag value using the <option>-t</option> command line option.
    </para>
    <para>
      See <xref linkend="tags"/> for more information on using tags.
    </para>
    <para>&def-is; <emphasis>empty string</emphasis>.</para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para>
    <command>Tag</command> &scope-server-until-next; <command>Tag</command> command.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
Tag cars
Server http://www.ford.com/
Server http://www.toyota.com/

Tag computers
Server http://www.sun.com/
Server http://www.apple.com/
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-category"/>,
      <xref linkend="tags"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-url">
  <refmeta>
  <refentrytitle>URL</refentrytitle>
  </refmeta>
  <refnamediv>
  <refname><command>URL</command></refname>
  <refpurpose>inserts &url; into database</refpurpose>
  <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>URL</command>
      <arg choice="req">url</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>URL</command> inserts the given &url; into the database.
    This is useful when you need to add multiple start points (<emphasis>entry points</emphasis>)
    to the same server, for example, to index some separate area of your server
    which is not referenced from the other documents.
    </para>
    <para>
    When inserting, &indexer; does not check the &url; against the rules described by
    <xref linkend="cmdref-allow"/> / <xref linkend="cmdref-disallow"/> filters
    and <xref linkend="cmdref-server"/> / <xref linkend="cmdref-realm"/> commands.
    If the &url; is disallowed by filters, or does not have a corresponding 
    <xref linkend="cmdref-server"/> or <xref linkend="cmdref-realm"/> command,
    it will be deleted when &indexer; pulls this &url; from the
    <emphasis>crawler queue</emphasis>.
    </para>
    <para>
    The <command>URL</command> command has no effect
    if the given &url; is already in the database.
    </para>
 </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# Define a server and an additional entry point:
Server http://localhost/
URL http://localhost/main/index.html
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-flushservertable"/>,
      <xref linkend="cmdref-realm"/>,
      <xref linkend="cmdref-server"/>,
      <xref linkend="cmdref-servertable"/>,
      <xref linkend="cmdref-subnet"/>,
      <xref linkend="cmdref-usesitemap"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-usercachequery">
  <refmeta>
  <refentrytitle>UserCacheQuery</refentrytitle>
  </refmeta>
  <refnamediv>
  <refname><command>UserCacheQuery</command></refname>
  <refpurpose>stores a search result to the database using a user-defined &sql; query</refpurpose>
  <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UserCacheQuery</command>
      <arg choice="req">SQL</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>UserCacheQuery</command> specifies an &sql; query
    to be run with every found document, typically to store
    search results to the database. This helps to use
    &mnogo; as an external
    fulltext search solution together with your database
    driven application.
    </para>
    <para>
    All query string variables are available in the query
    using <literal>${varname}</literal> syntax. Additionally, individual
    <literal>${url_id}</literal>, <literal>${score}</literal>,
    <literal>${rank}</literal>, <literal>${total}</literal>
    variables are available for every document.
    <literal>${score}</literal> contains score value multiplied
    by <literal>1000</literal>, in integer format.
    <literal>${rank}</literal> contains the order of a document,
    starting with <literal>0</literal>.
    <literal>${total}</literal> contains the total number of documents
    found.
  </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
  <informalexample>
  <programlisting>
UserCacheQuery "INSERT INTO ${my_table_name} (url_id,score,rank) VALUES (${url_id},${score},${rank})"
  </programlisting>
  </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbaddr"/>,
      <xref linkend="cmdref-htdbdoc"/>,
      <xref linkend="cmdref-htdblist"/>,
      <xref linkend="cmdref-servertable"/>,
      <xref linkend="htdb-fulltext"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-urldatathreshold">
  <refmeta>
  <refentrytitle>URLDataThreshold</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>URLDataThreshold</command></refname>
    <refpurpose>improves search performance for queries returning a small number of results</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>URLDataThreshold</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>URLDataThreshold</command> allows to improve
    search performance with <option>DBMode=blob</option>
    for the queries returning a small number of results
    (typically not more than <emphasis>several hundreds</emphasis>).
    If search returns fewer than <parameter>number</parameter> documents,
    full &url; information is not loaded from the <varname>bdict</varname>
    table and the <varname>url</varname> table is used instead.
    </para>
    <para>
    In other words, <command>URLDataThreshold</command> 
    switches from "<emphasis>loading a huge amount of &url;
    data from the fast source</emphasis>" to
    "<emphasis>loading a small amount of &url; data
    from the slow source</emphasis>".
    </para>
    <para>
    &def-is-0;, which means always read &url; data from
    the <varname>bdict</varname> table (from the fast source).
    </para>
    <para>
    Find the number which is good for your installation experimentally.
    <!--performance-->
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
URLDatsThreshold 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-dbaddr"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-urlselectcachesize">
  <refmeta>
  <refentrytitle>URLSelectCacheSize</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>URLSelectCacheSize</command></refname>
    <refpurpose>sets &url; cache size for &indexer;</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>URLSelectCacheSize</command><!--performance-->
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>URLSelectCacheSize</command>
    defines the number of &url;s to load from the database
    as crawler targets in a single portion. The bigger number makes
    crawling performance better, however in case when
    &indexer; crashes or is killed
    or is terminated using <literal>Ctrl-Break</literal>,
    some documents will get stuck in crawling queue and 
    won't be available for crawling for <literal>4 hours</literal>.
    </para>
    <note>
      <para>
      To make stuck documents available for crawling
      use <command>indexer -a</command> flag, in combination
      with suitable
      <link linkend="general-subsect">subsection control</link> option, like 
      <literal>-s</literal>, <literal>-u</literal>, etc.
      </para>
    </note>
    <para>
     &def-is; <literal>128</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
URLSelectCacheSize 1024
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-urlselectskiplock"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-urlselectskiplock">
  <refmeta>
  <refentrytitle>URLSelectSkipLock</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>URLSelectSkipLock</command></refname>
    <refpurpose>defines whether to skip locking &url;s when fetching crawling targets from the database</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>URLSelectSkipLock</command><!--performance-->
  <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>URLSelectSkipLock</command>, &indexer; sends a
      <literal>LOCK TABLE url</literal> &sql; query when
      fetching a set of new crawler targets from
      a &app-mysql; database to avoid
      multiple &indexer; instances crawling
      into the same &url;s. Fetching targets can take up
      to a few seconds in a huge database and can make
      simultaneous search queries stall and wait
      for &indexer; to finish fetching targets.
      <command>URLSelectSkipLock</command> helps to avoid this
      kind of delays in search queries when you're running only
      a single instance of &indexer; at the same time.
    </para>
    <note>
      <para>
       Running a single &indexer; instance
       with multiple threads using the <option>-N</option> switch
       is OK together with
       <command><literal>URLSelectSkipLock yes</literal></command>.
      </para>
    </note>
    <para>
     &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
URLSelectSkipLock yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-urlselectcachesize"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-usecookie">
  <refmeta>
    <refentrytitle>UseCookie</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UseCookie</command></refname>
    <refpurpose>defines whether to use per-session cookies during indexing</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseCookie</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>UseCookie</command> defines whether to use
    &http; cookies during indexing.
    </para>
    <para>
    Some sites may require cookies to crawl dynamic pages,
    e.g. database driven documents, &cgi;s, etc.
    Once &indexer; hits a dynamically created page,
    the site can request setting up a cookie containing session <varname>id</varname>
    or other kind of session information, and require
    that cookie for each subsequent request to other dynamically created documents.
    </para>
    <para>
    When <command>UseCookie</command> is set to <literal>yes</literal>,
    &indexer; remembers all cookies set by the crawled sites in &ram;, and uses
    them for subsequent requests to the same servers (taking into account
    the <varname>domain</varname> and <varname>path</varname> cookie attributes).
    </para>
    <para>&def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UseCookie yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-httpheader"/>,
      <xref linkend="cmdref-resultcontenttype"/>,
      <xref linkend="cmdref-usesitemap"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-uselocalcachedcopy">
  <refmeta>
  <refentrytitle>UseLocalCachedCopy</refentrytitle>
  </refmeta>
  <refnamediv>
  <refname><command>UseLocalCachedCopy</command></refname>
  <refpurpose>whether to use the original document as a source for excerpts and Cached Copy</refpurpose>
  <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseLocalCachedCopy</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>When <command>UseLocalCachedCopy</command> is set to
    <literal>yes</literal>, &search.cgi; tries
    to generate excerpts and "<emphasis>Cached Copy</emphasis>"
    documents using the original location of a document.
    If the original copy does not available anymore,
    &search.cgi; tries to fetch cached copy from the database.
    </para>
    <para>
    <command>UseLocalCachedCopy <literal>yes</literal></command>
    can be useful when indexing local files
    (i.e. the &scheme-file; &url; scheme).
    <command>UseLocalCachedCopy <literal>yes</literal></command>
    helps to remove the
    <command>Section CachedCopy</command> command
    from &indexer.conf; and thus avoid storing of
    cached copies in the database making the database smaller.
    </para>
    <para>
      &def-is-no;, which means
      &search.cgi; won't try to find the 
      original copy of a document, and will try to fetch
      cached copy directly from the database.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
  <informalexample>
  <programlisting>
UseLocalCachedCopy yes
  </programlisting>
  </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-htdbaddr"/>,
      <xref linkend="cmdref-htdbdoc"/>,
      <xref linkend="cmdref-htdblist"/>,
      <xref linkend="cmdref-section"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-usecrc32urlid">
  <refmeta>
    <refentrytitle>UseCRC32URLId</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UseCRC32URLId</command></refname>
    <refpurpose>defines whether to use &crc32; for &url; <varname>ID</varname> generation</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseCRC32URLId</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
       <command>UseCRC32URLId</command> defines whether to use &crc32; for &url; <varname>ID</varname> generation.
    </para>
    <para>&def-is-no;, which means &mnogo; relies on &sql; sequences or auto-increment columns for
    generating &url; <varname>ID</varname>s.
    </para>
    <para>
    Setting <command>UseCRC32URLId</command> to <literal>yes</literal> can be helpful
    when using &mnogo; with a database software not having sequences or auto-increment columns.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UseCRC32URLId yes
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>




<refentry id="cmdref-usenumericoperators">
  <refmeta>
  <refentrytitle>UseNumericOperators</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UseNumericOperators</command></refname>
    <refpurpose>defines whether to interpret numeric operators in a search query</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseNumericOperators</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
     When <command>UseNumericOperators</command> is set to <literal>yes</literal>,
     the <literal>&lt;</literal> and <literal>&gt;</literal>
     signs are interpreted as <firstterm>numeric operators</firstterm> and
     ignored otherwise. 
    </para>
    <para>
    &def-is-no;.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UseNumericOperators yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="numericoperators"/>.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-affix"/>,
    <xref linkend="cmdref-alwaysfoundword"/>,
    <xref linkend="cmdref-dehyphenate"/>,
    <xref linkend="cmdref-ispelluseprefixes"/>,
    <xref linkend="cmdref-spell"/>,
    <xref linkend="cmdref-sqlwordforms"/>,
    <xref linkend="cmdref-stopwordfile"/>,
    <xref linkend="cmdref-synonym"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-useremotecontenttype">
  <refmeta>
    <refentrytitle>UseRemoteContentType</refentrytitle>
  </refmeta>

  <refnamediv>
    <refname><command>UseRemoteContentType</command></refname>
    <refpurpose>specifies whether to trust the <varname>Content-Type</varname> &http; header from the remote servers</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseRemoteContentType</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>Description</title>
    <para><command>UseRemoteContentType</command> specifies
    if &indexer; should trust the <varname>Content-Type</varname>
    &http; header coming from the servers, or should use 
    its own content type bindings specified in
    the <command><xref linkend="cmdref-addtype"/></command> commands.
    </para>
    <para>
    Using <command>UseRemoteContentType <literal>yes</literal></command>
    can be helpful when dealing with misconfigured &http; and &https; servers.
    </para>
    <para>&def-is-yes;.
    </para>
  </refsect1>
  <refsect1>
    <title>Scope</title>
    <para><command>UseRemoteContentType</command> &scope-global-single;.</para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UseRemoteContentType yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-addtype"/>,
    <xref linkend="cmdref-defaultcontenttype"/>,
    <xref linkend="cmdref-mime"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-userorder">
  <refmeta>
    <refentrytitle>UserOrder</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UserOrder</command></refname>
    <refpurpose>specifies an &sql; query
    for user defined ordering
    </refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>UserOrder</command>
    <arg choice="req">name</arg>
    <arg choice="req">sql-query</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    The <command>UserOrder</command> command allows to
    configure a user defined ordering of the documents.
    </para>
    <para>
    The default way of sorting by a user defined section is possible with 
    help of <literal>s=S&amp;su=secname</literal>
    <link linkend="search-params">search parameters</link>,
    however it can be slow in case of a big database.
    <command>UserOrder</command> allows to improve performance
    of ordering by a user defined section by preliminary caching
    the data required for sorting in a quickly accessible format.
    </para>
    <para>
    The sorting data is cached in the database whenever 
    <userinput>indexer -Eblob</userinput> or
    <userinput>indexer -Erewritelimits</userinput> is run.
    </para>
    <para>
    When processing the <option>s=S&amp;su=secname</option> search parameters,
    &search.cgi; checks if cached sorting data for
    fast ordering presents in the database and uses the cached data on success.
    Otherwise, it switches to the slow method of ordering by direct query
    to the <varname>urlinfo</varname> table.
    </para>
    <para>
    The first parameter <option>name</option> stands for the user order name.
    </para>
    <para>The second parameter <option>sql-query</option> represents an &sql;
    query which returns a result set consisting of a single column 
    with values corresponding to <varname>ID</varname>s of the documents.
    The <varname>ID</varname>s must be returned in the desired
    order by using the <literal>ORDER BY</literal>
    clause in the &sql; query.
    The &sql; query should typically fetch data
    from the table <varname>url</varname>
    (using the column <varname>rec_id</varname>) or
    the table <varname>urlinfo</varname>
    (using the column <varname>url_id</varname>).
      <note>
      <para>
      The <varname>ID</varname>s of the documents are stored in the
      <literal>rec_id</literal> column of the
      <literal>url</literal> table of
       &mnogo; database.
      To know an <varname>ID</varname> of a certain document
      you can run this &sql; query:
      <programlisting>
SELECT rec_id FROM url WHERE url='http://hostname/page1.html';
      </programlisting>
      </para>
      </note>
    </para>
    <para>
    It is possible to configure multiple <command>UserOrder</command> commands
    in the same &indexer.conf;.
    The <literal>name</literal> argument must be unique
    in every <command>UserOrder</command> command.
    </para>
    <para>
    &search.cgi; detects which
    <command>UserOrder</command> command to use by taking
    its name from the <literal>su=secname</literal>
    search parameter. If no <literal>su</literal>
    parameter is given, or the <literal>su</literal> value is empty,
    then non of the <command>UserOrder</command> commands are applied
    for ordering.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
# Prepare data for fast ordering by Title
UserOrder title "SELECT url_id FROM urlinfo WHERE sname='title' ORDER BY sval"

# Prepare data for fast ordering by document size
UserOrder title "SELECT rec_id FROM url ORDER BY docsize"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-limit"/>,
      <xref linkend="cmdref-userscorefactor"/>,
      <xref linkend="cmdref-usersitescore"/>,
      <xref linkend="search-params"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-usesitemap">
  <refmeta>
    <refentrytitle>UseSitemap</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UseSitemap</command></refname>
    <refpurpose>defines whether to use Sitemap Protocol when crawling</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UseSitemap</command>
      <group choice="req"><arg>yes</arg><arg>no</arg></group>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>UseSitemap</command> defines whether to use
    <emphasis><ulink url="http://en.wikipedia.org/wiki/Sitemaps">Sitemap
    Protocol</ulink></emphasis> to fetch the list of &urls; available
    for crawling on a website. 
    </para>
    <para>
    Sitemaps are particularly useful for websites where
    some areas are not available through the browsable interface.
    </para>
    <para>&def-is-yes;
    </para>
    <note>
      <para>
      As <emphasis>Sitemap Protocol</emphasis> is a supplement
      to <emphasis>Robots Exclusion</emphasis> protocol, &indexer; 
      can not use <emphasis>Sitemap Protocol</emphasis> if
      <xref linkend="cmdref-robots"/> is set to <literal>no</literal>.
      </para>
    </note>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UseSitemap yes
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-usecookie"/>,
      <xref linkend="cmdref-url"/>,
      <xref linkend="cmdref-robots"/>,
      <xref linkend="cmdref-resultcontenttype"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-userscore">
  <refmeta>
    <refentrytitle>UserScore</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UserScore</command></refname>
    <refpurpose>specifies an &sql; query to calculate user defined score
    for desired documents.
    </refpurpose>
    <refclass>&search.htm;</refclass>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>UserScore</command>
    <arg choice="req">name</arg>
    <arg choice="req">sql-query</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    The <command>UserScore</command> command allows to
    configure user defined scores
    for some or all documents in the database. The score value
    calculated by &mnogo;
    is mixed with the user defined value,
    so you can affect the final rank for desired documents.
    </para>
    <para>
    It is possible to configure multiple <command>UserScore</command> commands,
    however only one of them can be used during search time.
    The <literal>name</literal> argument should be unique
    in every <command>UserScore</command> command.
    &search.cgi; detects which
    <command>UserScore</command> command to use taking
    its name from the <literal>us=name1</literal>
    &html; form parameter. If no <literal>us</literal>
    parameter is given, or <literal>us</literal> value is empty,
    non of the <command>UserScore</command> commands are applied.
    </para>
    <para>The second argument must represent an &sql; query returning
    a result set consisting of two columns. The first column in each
    record should correspond to &id; of a document
    whose score should be modified.
    </para>
    <note>
    <para>
    The document &id;s are stored in the
    <literal>rec_id</literal> column of the
    <literal>url</literal> table of the &mnogo; database.
    To know the &id; of a certain document
    you can run this &sql; query in the &mnogo; database:
    <programlisting>
SELECT rec_id FROM url WHERE url='http://hostname/page1.html';
    </programlisting>
    </para>
    </note>
    <para>
    The second column stands for a user defined score value for this document,
    returned as signed integer in the range <literal>-255..+255</literal>.
    The original score
    value calculated by &mnogo; is mixed with the user defined value as follows:
    <itemizedlist>
    <listitem><para>A positive user defined value makes the final rank for this document higher.</para>
    </listitem>
    <listitem><para>A negative user defined value makes the final rank lower.</para>
    </listitem>
    <listitem><para>A zero user defined value does not change score.</para>
    </listitem>
    <listitem><para>If a document is not represented in a
    <command>UserScore</command> &sql; query result,
    its score is not changed.</para>
    </listitem>
    </itemizedlist>
    </para>
    <para>
    If the <command>UserScore</command> command is specified in &search.htm;,
    then the &sql; query is executed during search time. This mode can be recommended
    for a simple <command>UserScore</command> &sql; query with a small number of records
    returned.
    </para>
    <para>
    When you have a complex <command>UserScore</command> &sql; query
    (which needs time for its execution and/or returns a large result set),
    then is it's possible
    to specify the <command>UserScore</command> command in &indexer.conf; instead.
    In this case the &sql; query is evaluated only during
    <command><literal>indexer -Eblob</literal></command> or
    <command><literal>indexer -Erewritelimits</literal></command> time,
    and its result is cached in the database.
    At search time &search.cgi; loads the cached result from the database.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# Give more score to documents with longer URL
UserScore long "SELECT rec_id, length(url) FROM url"

# Give more score to documents with shorter URL
UserScore short "SELECT rec_id, -length(url) FROM url"

# Give higher scores to some certain documents:
UserScore list1 "SELECT rec_id, 255 FROM url WHERE rec_id IN (1,100,300)"
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-limit"/>,
      <xref linkend="cmdref-userscorefactor"/>,
      <xref linkend="cmdref-usersitescore"/>,
      <xref linkend="search-params"/>.
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-usersitescore">
  <refmeta>
    <refentrytitle>UserSiteScore</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UserSiteScore</command></refname>
    <refpurpose>specifies an &sql; query to calculate user defined score
    for certain sites.
    </refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>UserSiteScore</command>
    <arg choice="req">name</arg>
    <arg choice="req">sql-query</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    The <command>UserSiteScore</command> command allows to
    configure user defined scores for some or all
    servers in the database. The score value
    calculated by &mnogo;
    is mixed with the user defined site value,
    so you can affect the final rank for the desired sites.
    </para>
    <para>
    It is possible to configure multiple
    <command>UserSiteScore</command> commands,
    however only one of them can be used during search time.
    The <literal>name</literal> argument should be unique
    in every <command>UserSiteScore</command> command.
    &search.cgi; detects which
    <command>UserSiteScore</command> command to use taking
    its name from the <literal>ss=name1</literal>
    &html; form parameter. If no <literal>ss</literal>
    parameter is given, or <literal>ss</literal>'s
    value is empty, non of the
    <command>UserSiteScore</command> commands are applied.
    </para>
    <para>The second argument must represent an &sql; query returning
    a result set consisting of two columns. The first column in every
    record should correspond to an &id; of a site whose score
    should be modified.
    </para>
    <note>
    <para>
    The site &id;s are stored in the <literal>site_id</literal>
    column of the <varname>url</varname> table of the
    &mnogo; database. To know an &id; of a certain site
    you can run this &sql; query in the database:
    <programlisting>
SELECT site_id FROM url WHERE url LIKE 'http://hostname/%';
    </programlisting>
    </para>
    </note>
    <para>
    The second column stands for a user defined score value for this site,
    returned as a signed integer in the range <literal>-255..+255</literal>.
    The original score value calculated by
    &mnogo; is mixed with the
    user defined site value as follows:
    <itemizedlist>
    <listitem>
      <para>A positive user defined site value makes the final rank for this site higher.</para>
    </listitem>
    <listitem>
      <para>A negative user defined site value makes the final rank lower.</para>
    </listitem>
    <listitem>
      <para>A zero user defined value does not change score.</para>
    </listitem>
    <listitem>
      <para>If a site is not represented in a
      <command>UserSiteScore</command> &sql; query result,
      its score is not changed.
      </para>
    </listitem>
    </itemizedlist>
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
    <programlisting>
# Give higher scores to certain sites using IDs:
UserSiteScore list1 "SELECT site_id, 255 FROM url WHERE site_id IN (101,210,400)"

# Give higher scores to a certain site using &url; pattens:
UserSiteScore list2 "SELECT site_id, 255 FROM url WHERE url LIKE 'http://mysite/%' LIMIT 1"
    </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-userscore"/>,
      <xref linkend="cmdref-userscorefactor"/>,
      <xref linkend="search-params"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-userscorefactor">
  <refmeta>
  <refentrytitle>UserScoreFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>UserScoreFactor</command></refname>
    <refpurpose>sets the effect of the <command>UserScore</command> command</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>UserScoreFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
      <command>UserScoreFactor</command> sets the effect of user defined scores
      when they are mixed with usual scores calculated by &mnogo;.
    </para>
    <para>
     <command>UserScoreFactor</command> is to be used with a number in the range
     <literal>0..255</literal>, in combination with a 
     <command><xref linkend="cmdref-userscore"/></command> command.
     </para>
     <para>
      &def-is; <literal>0</literal>, which means the user defined scores are not taken
      into account and the final score values depend only on the internal scores
      as calculated by &mnogo;.
     </para>
     <para>
     <literal>255</literal> means maximum effect of user defined values.
     </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
UserScore list1 "SELECT id, score FROM mytable WHERE url.rec_id=mytable.id"
UserScoreFactor 10
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-userscore"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-datefactor"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-vardir">
  <refmeta>
    <refentrytitle>VarDir</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>VarDir</command></refname>
    <refpurpose>defines &mnogo; working directory</refpurpose>
    <refclass>&indexer.conf;</refclass>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>VarDir</command>
      <arg choice="req">path</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>VarDir</command> chooses an alternative
     working directory for disk-based operations,
     for example for <link linkend="srcache">search results cache</link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
VarDir /usr/local/mnogosearch/var
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>



<refentry id="cmdref-varylang">
  <refmeta>
    <refentrytitle>VaryLang</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>VaryLang</command></refname>
    <refpurpose>defines languages for multilingual indexing</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
    <command>VaryLang</command>
    <arg choice="req">string</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para><command>VaryLang</command> specifies the list of
     languages to be used in <firstterm>&http; content negotiation</firstterm>
     for <link linkend="vary">multilingual server indexing</link>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
VaryLang "ru en fr de"
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-defaultlang"/>,
    <xref linkend="cmdref-guesserusemeta"/>,
    <xref linkend="cmdref-langmapfile"/>,
    <xref linkend="cmdref-langmapupdate"/>,
    <xref linkend="cmdref-loadchineselist"/>,
    <xref linkend="cmdref-loadthailist"/>,
    <xref linkend="vary"/>.
  </para>
  </refsect1>
</refentry>




<refentry id="cmdref-wf">
  <refmeta>
  <refentrytitle>wf</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>wf</command></refname>
    <refpurpose>sets the default weights for different document parts</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>wf</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title></title>
    <para>
    <command>wf</command> sets the default weight vector if the
    "wf" <link linkend="search-params">search parameter</link> is not specified.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
wf 0211
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-numsections"/>,
      <xref linkend="cmdref-worddistanceweight"/>,
      <xref linkend="cmdref-section"/>,
      <xref linkend="relevancy"/>, 
      <xref linkend="search-changeweight"/>.
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-wordcachesize">
  <refmeta>
    <refentrytitle>WordCacheSize</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>WordCacheSize</command></refname>
    <refpurpose>defines maximum allowed in-memory words cache size</refpurpose>
    <refclass>&indexer.conf;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>WordCacheSize</command><!--performance-->
      <arg choice="req">bytes</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
      <command>WordCacheSize</command> defines the maximum
      allowed size of the <firstterm>in-memory words cache</firstterm>.
    </para>
    <para>
    Word cache is used with <option>DBMode=multi</option> to improve
    crawling performance.
    </para>
    <para>A separate word cache of the given size is allocated for every &cmd-dbaddr; command,
    so if &indexer.conf; contains three &cmd-dbaddr; commands with <command>WordCacheSize</command>
    set to <literal>10Mb</literal>, then <literal>30Mb</literal> of &ram; total will be used for
    the three word caches.
    </para>
    <para>&def-is; <literal>8388608</literal> (<literal>8Mb</literal>).
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
WordCacheSize 8388608
      </programlisting>
    </informalexample>
  </refsect1>
</refentry>




<refentry id="cmdref-worddensityfactor">
  <refmeta>
  <refentrytitle>WordDensityFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>WordDensityFactor</command></refname>
    <refpurpose>gives more score to documents having higher word density</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>WordDensityFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>WordDensityFactor</command> gives more score to the documents
    having higher frequency of the search query words.
    </para>
    <para>
    <parameter>number</parameter> should be a number in the range <literal>0..255</literal>,
    with higher numbers meaning stronger effect. If <parameter>number</parameter> is
    <literal>0</literal>, then word density does not affect the final score.
    </para>
    <para>
     &def-is; <literal>25</literal>.
    </para>
    <para>
    Word frequency is calculated separately for every section
    (e.g. <varname>title</varname>, <varname>body</varname>, etc)
    and is evaluated as the number of times the word appears in the section,
    devided by the total number of the words in this section.
    </para>
    <para>
      <command>WordDensityFactor</command> appeared in &mnogo; version <literal>3.3.0</literal>.
    </para>
    <note>
    <para>
      <command>WordDensityFactor</command> is ingored if 
      <xref linkend="cmdref-savesectionsize"/> is set to <literal>no</literal>.
    </para>
    </note>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
WordDensityFactor 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-wordformfactor"/>
    </para>
  </refsect1>
</refentry>



<refentry id="cmdref-wordformfactor">
  <refmeta>
  <refentrytitle>WordFormFactor</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>WordFormFactor</command></refname>
    <refpurpose>gives more score to the original query word form
     (as opposite to 
      <link linkend="synonyms">Synonym</link> or
      <link linkend="ispell">&app-ispell;</link> fuzzy forms)
    </refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>WordFormFactor</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>WordFormFactor</command> gives more score to
    the <firstterm>original word forms</firstterm> written
    in a search query, and to give less scores to
    <firstterm>fuzzy word forms</firstterm> generated
    using 
    <link linkend="synonyms">Synonyms</link> or
    <link linkend="ispell">&app-ispell;</link> dictionaries.
    </para>
    <para>
    The <parameter>number</parameter> should be in the range <literal>0..255</literal>,
    with lower values meaning stronger effect.
    </para>
    <para>
    &def-is; <literal>255</literal>, which means to give the same
    weight to the original and the fuzzy forms.
    <literal>0</literal> means maximum effect, i.e. weight for the generated word forms
    will be much smaller than weight for the original word form.
    </para>
    <para>
      This command appeared in &mnogo; version <literal>3.3.0</literal>.
    </para>
  </refsect1>
  <refsect1>
    <title>Examples</title>
    <informalexample>
      <programlisting>
WordFormFactor 100
      </programlisting>
    </informalexample>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
      <xref linkend="cmdref-docsizeweight"/>
      <xref linkend="cmdref-idffactor"/>
      <xref linkend="cmdref-mincoordfactor"/>
      <xref linkend="cmdref-numdistinctwordfactor"/>
      <xref linkend="cmdref-numwordfactor"/>
      <xref linkend="cmdref-worddensityfactor"/>
    </para>
  </refsect1>
</refentry>




<refentry id="cmdref-worddistanceweight">
  <refmeta>
  <refentrytitle>WordDistanceWeight</refentrytitle>
  </refmeta>
  <refnamediv>
    <refname><command>WordDistanceWeight</command></refname>
    <refpurpose>changes word distance impact on the document score</refpurpose>
    <refclass>&search.htm;</refclass>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>WordDistanceWeight</command>
      <arg choice="req">number</arg>
    </cmdsynopsis>
  </refsynopsisdiv>
  <refsect1>
    <title>Description</title>
    <para>
    <command>WordDistanceWeight</command> is to be used
    with a number in the range <literal>0..255</literal>
    to change effect of distance between the searched words
    on the resulting score. 
    </para>
    <para>
    &def-is; <literal>255</literal>,
    which means maximum effect of the word distance.
    </para>
  </refsect1>
  <refsect1>
    <title>See also</title>
    <para>
    <xref linkend="cmdref-numsections"/>,
    <xref linkend="cmdref-wf"/>.
  </para>
  </refsect1>
</refentry>

