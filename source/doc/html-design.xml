<sect1 id="html">
  <title>Designing &search.htm;</title>
  <para>
    This section assumes that you are using
    the <acronym>CGI</acronym> front end.
  </para>
  
  
  <sect2 id="html-respage">
    <title>How the search results page is created</title>
    <para>The file template file &search.htm;
    consists of a number of blocks delimited by &html;
    comments starting with <literal>&lt;!--comment--&gt;</literal>
    and ending with <literal>&lt;!--/comment--&gt;</literal>.
    </para>

    <para>There is a special block <literal>&lt;!--variables ... --&gt;</literal>
    which is used to put <emphasis>commands</emphasis> to.
    The other blocks form parts of the output.
    </para>

    <para>The blocks <literal>&lt;--top--&gt;</literal> and
    <literal>&lt;!--bottom--&gt;</literal> are always returned
    to the user as the top and the bottom parts of the output
    page page respectively.
    </para>

    <para>The three blocks
    <literal>&lt;!--restop--&gt;</literal>,
    <literal>&lt;!--res--&gt;</literal> and
    <literal>&lt;!--resbot--&gt;</literal> are displayed
    to the user in case when a search query produced at
    least one result. The blocks  <literal>&lt;!--restop--&gt;</literal>
    and <literal>&lt;!--resbot--&gt;</literal> are displayed once,
    while the block <literal>&lt;!--res--&gt;</literal> is displayed
    for every found document.
    </para>
    <para>
    Furthermore there is a serie of <emphasis>page navigation</emphasis>
    blocks and the blocks
    <literal>&lt;!--notfound--&gt;</literal>,
    <literal>&lt;!--noquery--&gt;</literal> and
    <literal>&lt;!--error--&gt;</literal>.
    The latter three blocks are returned occasionally
    in situations when search did not return any results.
    </para>

    <para>
     Any &html; code that is outside the pre-defined
     blocks in &search.htm; is completely ignored.
    </para>
    <para>The output of &search.cgi;
    consists of these parts, depending on the situation:
<programlisting>

  top                 
  restop                top                 top              top
  res            or     notfound      or    error     or     noquery
  resbot                bottom              bottom           bottom
  (navigation)
  bottom

</programlisting>
    </para>
    
    <para>The navigation part is built in the same way,
    with the elements that pertain to every results page.
    For example,
    <literal>&lt;!--navleft--&gt;</literal> and
    <literal>&lt;!--navright--&gt;</literal> are used to link to the
    previous and next results pages, while
    <literal>&lt;!--navXXX_nop--&gt;</literal>
    is used when there are no more pages in one or either direction.
    </para>

  </sect2>


  <sect2 id="html-yourhtml">
    <title>Your &html;</title>
    <para>The default &html; template code 
    provided in &search.htm-dist;
    is ready for use, so you may decide to use it 
    without applying any major modifications.
    </para>

    <para>Once you decide to add bells and whistles to
    your search, you have multiple options. One option is to keep
    the simple design of &search.htm; and
    make it part of a frame set. This way you can add elements
    such as menus etc in a frame and keep the
    output of &search.htm; in another frame.
    </para>

    <para>Other option is to incorporate your entire
     design into &search.htm;. As soon
     as you understand the idea of the <emphasis>blocks</emphasis>
     described above, this should be easy to do.
    </para>

    <para>For example, you might want a page in tables that looks like this:
<programlisting>
                   ----------------------------------
                  |       top  table                 |
                  |..................................|
                  |        .                         |
                  |left    .                         |
                  |        .                         |
                  |        .         main table      |
                  |table   .                         |
                  |        .                         |
                  |        .                         |
                   ----------------------------------
</programlisting>
    </para>
    
    <para>If you are planning to put your results in the
    main table, you can put all the &html;
    code in the <literal>&lt;!--top--&gt;</literal>
    block of &search.htm;, up to and including the
    opening of the main table
    (<literal>&lt;table&gt;&lt;tr&gt;&lt;td&gt;</literal>).
    If you then put the closing of the main table and the closing
    tags of the  page in the <literal>&lt;!--bottom--&gt;</literal> block
    (<literal>&lt;/table&gt;&lt;/tr&gt;&lt;/td&gt;&lt;/body&gt;&lt;/html&gt;</literal>)
    and leave all other blocks unformatted, you will have the
    design of your choice and all your results in the right place.
    </para>

    <para>In a more complicated design, where you want to
    format results individually, you can apply the same method as long as
    you keep track of the opening and closing of &html; elements. You must
    either open and close them in the same block, or make sure that any
    possible combination of blocks will result in properly opened and
    closed &html; tags.
    </para>

    <para>What you cannot do without editing the source
    code, is change the order in which the blocks are parsed. Taking the
    above example, let's assume that you want your page to look like this:
<programlisting>
                   ----------------------------------
                  |  logo       banner ads           |
                  |..................................|
                  |            .                     |
                  |choices     .                     |
                  |            .                     |
                  |            .    results          |
                  |search      .                     |
                  |button      .                     |
                  |            .                     |
                   ----------------------------------
</programlisting>
    </para>
    
    <para>To get this, you need to have everything except
    the results and navigation in the <literal>&lt;!--top--&gt;</literal>
    block, since that is the only block that can draw the page even if
    there are no results at all. In this case your
    &search.htm; would look like this:
    </para>

    <informalexample role="example-source">
      <programlisting>
 &lt;!--variables--&gt;
  [your configuration]
 &lt;!--/variables--&gt;

 &lt;!--top--&gt;
  &lt;html&gt;
  &lt;body&gt;
  &lt;table&gt;
    &lt;tr colspan="2"&gt;
    &lt;td&gt;[logo, banner ads]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
    &lt;td&gt;[search form]&lt;/td&gt;
    &lt;td&gt;
  &lt;!--/top--&gt;

  [all other blocks in &search.htm; except "bottom"]

  &lt;!--bottom--&gt;
    [closing elements like the mnogosearch link 
     and a link to the webmaster]
    &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
  &lt;/body&gt;
  &lt;/html&gt;
  &lt;!--/bottom--&gt;
    </programlisting>
    </informalexample>

    <para>The individual blocks can be formatted
    individually as long as that formatting is closed within each
    block. Thus, nothing stops you from doing things like
    </para>
    <informalexample>
<programlisting>
  &lt;!--error--&gt;
    &lt;table&gt;
    &lt;tr&gt;&lt;td bgcolor"red"&gt;
      &lt;font color="#ffffff"&gt;  
      [error variables]
      &lt;/font&gt;
    &lt;/tr&gt;&lt;td&gt;
    &lt;/table&gt;
  &lt;!--error--&gt;
</programlisting>
    </informalexample>
    <para>as long as such formatting is opened and closed
    properly within the same block.
    </para>
  </sect2>
  
  
  
  <sect2 id="html-forms">
    <title>Forms considerations</title>
    <para>Although the modern browsers can handle forms that
    stretch over different tables, writing this kind of forms
    abuses the standards and is usually considered as bad
    &html;. Unless you really can't avoid it,
    using this style is not recommended.
    </para>
    <para>For example,</para>
    <informalexample>
      <programlisting>
  &lt;table&gt;
  &lt;tr&gt;&lt;td&gt;
     &lt;form&gt;
     &lt;input type="text" name="something"&gt;
     &lt;input type="radio" name"button1"&gt;
     &lt;input type="radio" name"button2"&gt;
     &lt;/form&gt;
  &lt;/tr&gt;&lt;/td&gt;
  &lt;/table&gt;
      </programlisting>
    </informalexample>
    <para>is fine, but </para>
    <informalexample>
      <programlisting>
  &lt;table&gt;
    &lt;tr&gt;&lt;td&gt;
       &lt;form&gt;
       &lt;input type="text" name="something"&gt;
    &lt;/tr&gt;&lt;/td&gt;
  &lt;/table&gt;
  &lt;table&gt;
    &lt;tr&gt;&lt;td&gt;
       &lt;input type="radio" name"button1"&gt;
       &lt;input type="radio" name"button2"&gt;
       &lt;/form&gt;
    &lt;/tr&gt;&lt;/td&gt;
    &lt;/table&gt;
      </programlisting>
    </informalexample>
    <para>is <emphasis>not</emphasis>.
    </para>
    
    <para>Note that the input forms in &search.htm;
    can be changed at will. The default is drop-down menus, but nothing
    stops you from using radio buttons or hidden input or text boxes.
    For instance, where &search.htm; says </para>
    <informalexample>
      <programlisting>
  Results per page:
  &lt;SELECT NAME="ps"&gt;
  &lt;OPTION VALUE="10" SELECTED="$ps"&gt;10
  &lt;OPTION VALUE="20" SELECTED="$ps"&gt;20
  &lt;OPTION VALUE="50" SELECTED="$ps"&gt;50
  &lt;/SELECT&gt;
      </programlisting>
    </informalexample>
    <para>you can very well substitute
    </para>
    <informalexample>
      <programlisting>
  &lt;input type="radio" name"ps" value="10"&gt;
  &lt;input type="radio" name"ps" value="20" checked&gt;
  &lt;input type="radio" name"ps" value="50"&gt;
      </programlisting>
    </informalexample>
    <para>which will result in three radio buttons instead
    of the drop-down menu, with <literal>20</literal>
    being the default page size.
    </para>
    <para>Note that you can also use the </para>
    <informalexample>
      <programlisting>
  &lt;input type="hidden" name="XX" value="YY"&gt;
        </programlisting>
    </informalexample>
    <para>format if you want to set your own
    default values without allowing the user to change them.
    </para>
  </sect2>
  
  
  <sect2 id="html-rellinks">
    <title>Relative links in &search.htm;</title>
    <para>It might be worth mentioning that
    &search.htm; is parsed by 
    &search.cgi; which
    usually resides in the <filename>/cgi-bin/</filename> directory
    of your Web server. When you open
    <literal>http://site-name/cgi-bin/search.cgi</literal>
    in your browser, all <emphasis>relative</emphasis>
    links are considered as relative to the
    <filename>/cgi-bin/</filename> directory.
    Therefore, if you have a file system structure like
   </para>

    <informalexample>
<programlisting>
   /var/www/images/
   /var/www/html/
   /var/www/cgi-bin/
</programlisting>
    </informalexample>
    <para>the correct relative link from <filename>search.cgi</filename>
    to the images in <filename>/images/</filename> will be
    </para>
    <para><literal>&lt;img src="../images/image.gif"&gt;</literal></para>
  </sect2>


  <sect2 id="html-searchform">
    <title>Adding a small Search form to the other pages of your site</title>
    <para>To add a small search form to any of your pages,
    you can put the following code:
    </para>

    <informalexample>
<programlisting>
&lt;FORM METHOD="GET" ACTION="/cgi-bin/search.cgi"&gt;
  &lt;INPUT TYPE="text" NAME="q" VALUE=""&gt;
  &lt;INPUT TYPE="submit" VALUE="Search!"&gt;
&lt;/FORM&gt;
</programlisting>
    </informalexample>
  </sect2>
</sect1>
